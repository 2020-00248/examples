const e=window.aleph.h;import{a as t,b as n}from"./chunk-1519ad9e.js";var s;!function(e){e.NULL="NULL",e.ERROR="ERROR",e.APP_SET_SRC="APP_SET_SRC",e.APP_SET_SRC_LOADED="APP_SET_SRC_LOADED",e.APP_SET_NODE="APP_SET_NODE",e.APP_DELETE_NODE="APP_DELETE_NODE",e.APP_SELECT_NODE="APP_SELECT_NODE",e.APP_CLEAR_NODES="APP_LOAD_NODES",e.APP_SET_EDGE="APP_SET_EDGE",e.APP_DELETE_EDGE="APP_DELETE_EDGE",e.APP_SELECT_EDGE="APP_SELECT_EDGE",e.APP_CLEAR_EDGES="APP_LOAD_EDGES",e.APP_SET_ANGLE="APP_SET_ANGLE",e.APP_DELETE_ANGLE="APP_DELETE_ANGLE",e.APP_SELECT_ANGLE="APP_SELECT_ANGLE",e.APP_CLEAR_ANGLES="APP_LOAD_ANGLES",e.APP_SET_DISPLAY_MODE="APP_SET_DISPLAY_MODE",e.APP_SET_ORIENTATION="APP_SET_ORIENTATION",e.APP_SET_NODES_ENABLED="APP_SET_NODES_ENABLED",e.APP_SET_BOUNDINGBOX_VISIBLE="APP_SET_BOUNDINGBOX_VISIBLE",e.APP_SET_SLICES_INDEX="APP_SET_SLICES_INDEX",e.APP_SET_SLICES_WINDOW_WIDTH="APP_SET_SLICES_WINDOW_WIDTH",e.APP_SET_SLICES_WINDOW_CENTER="APP_SET_SLICES_WINDOW_CENTER",e.APP_SET_VOLUME_STEPS="APP_SET_VOLUME_STEPS",e.APP_SET_VOLUME_WINDOW_WIDTH="APP_SET_VOLUME_WINDOW_WIDTH",e.APP_SET_VOLUME_WINDOW_CENTER="APP_SET_VOLUME_WINDOW_CENTER",e.APP_SET_CAMERA="APP_SET_CAMERA",e.APP_SET_CONTROLS_ENABLED="APP_SET_CONTROLS_ENABLED"}(s||(s={}));const a=e=>async(t,n)=>t({type:s.APP_SET_SRC,payload:e}),i=e=>async(t,n)=>t({type:s.APP_SET_SRC_LOADED,payload:e}),o=e=>async(t,n)=>t({type:s.APP_SET_NODE,payload:e}),r=e=>async(t,n)=>t({type:s.APP_DELETE_NODE,payload:e}),c=e=>async(t,n)=>t({type:s.APP_SELECT_NODE,payload:e}),d=e=>async(t,n)=>t({type:s.APP_CLEAR_NODES,payload:e}),l=e=>async(t,n)=>t({type:s.APP_SET_EDGE,payload:e}),h=e=>async(t,n)=>t({type:s.APP_DELETE_EDGE,payload:e}),E=e=>async(t,n)=>t({type:s.APP_SELECT_EDGE,payload:e}),p=e=>async(t,n)=>t({type:s.APP_CLEAR_EDGES,payload:e}),u=e=>async(t,n)=>t({type:s.APP_SET_ANGLE,payload:e}),m=e=>async(t,n)=>t({type:s.APP_DELETE_ANGLE,payload:e}),g=e=>async(t,n)=>t({type:s.APP_SELECT_ANGLE,payload:e}),_=e=>async(t,n)=>t({type:s.APP_CLEAR_ANGLES,payload:e}),b=e=>async(t,n)=>t({type:s.APP_SET_DISPLAY_MODE,payload:e}),S=e=>async(t,n)=>t({type:s.APP_SET_NODES_ENABLED,payload:e}),y=e=>async(t,n)=>t({type:s.APP_SET_BOUNDINGBOX_VISIBLE,payload:e}),v=e=>async(t,n)=>t({type:s.APP_SET_ORIENTATION,payload:e}),f=e=>async(t,n)=>t({type:s.APP_SET_SLICES_INDEX,payload:e}),T=e=>async(t,n)=>t({type:s.APP_SET_SLICES_WINDOW_WIDTH,payload:e}),A=e=>async(t,n)=>t({type:s.APP_SET_SLICES_WINDOW_CENTER,payload:e}),P=e=>async(t,n)=>t({type:s.APP_SET_VOLUME_STEPS,payload:e}),N=e=>async(t,n)=>t({type:s.APP_SET_VOLUME_WINDOW_WIDTH,payload:e}),D=e=>async(t,n)=>t({type:s.APP_SET_VOLUME_WINDOW_CENTER,payload:e}),O=e=>async(t,n)=>t({type:s.APP_SET_CAMERA,payload:e}),L=e=>async(t,n)=>t({type:s.APP_SET_CONTROLS_ENABLED,payload:e});var w=function(e){var t,n=("undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof module?module:Function("return this")()).Symbol;return"function"==typeof n?n.observable?t=n.observable:(t=n("observable"),n.observable=t):t="@@observable",t}(),R=function(){return Math.random().toString(36).substring(7).split("").join(".")},C={INIT:"@@redux/INIT"+R(),REPLACE:"@@redux/REPLACE"+R(),PROBE_UNKNOWN_ACTION:function(){return"@@redux/PROBE_UNKNOWN_ACTION"+R()}};function I(e,t,n){var s;if("function"==typeof t&&"function"==typeof n||"function"==typeof n&&"function"==typeof arguments[3])throw new Error("It looks like you are passing several store enhancers to createStore(). This is not supported. Instead, compose them together to a single function");if("function"==typeof t&&void 0===n&&(n=t,t=void 0),void 0!==n){if("function"!=typeof n)throw new Error("Expected the enhancer to be a function.");return n(I)(e,t)}if("function"!=typeof e)throw new Error("Expected the reducer to be a function.");var a=e,i=t,o=[],r=o,c=!1;function d(){r===o&&(r=o.slice())}function l(){if(c)throw new Error("You may not call store.getState() while the reducer is executing. The reducer has already received the state as an argument. Pass it down from the top reducer instead of reading it from the store.");return i}function h(e){if("function"!=typeof e)throw new Error("Expected the listener to be a function.");if(c)throw new Error("You may not call store.subscribe() while the reducer is executing. If you would like to be notified after the store has been updated, subscribe from a component and invoke store.getState() in the callback to access the latest state. See https://redux.js.org/api-reference/store#subscribe(listener) for more details.");var t=!0;return d(),r.push(e),function(){if(t){if(c)throw new Error("You may not unsubscribe from a store listener while the reducer is executing. See https://redux.js.org/api-reference/store#subscribe(listener) for more details.");t=!1,d();var n=r.indexOf(e);r.splice(n,1)}}}function E(e){if(!function(e){if("object"!=typeof e||null===e)return!1;for(var t=e;null!==Object.getPrototypeOf(t);)t=Object.getPrototypeOf(t);return Object.getPrototypeOf(e)===t}(e))throw new Error("Actions must be plain objects. Use custom middleware for async actions.");if(void 0===e.type)throw new Error('Actions may not have an undefined "type" property. Have you misspelled a constant?');if(c)throw new Error("Reducers may not dispatch actions.");try{c=!0,i=a(i,e)}finally{c=!1}for(var t=o=r,n=0;n<t.length;n++)(0,t[n])();return e}return E({type:C.INIT}),(s={dispatch:E,subscribe:h,getState:l,replaceReducer:function(e){if("function"!=typeof e)throw new Error("Expected the nextReducer to be a function.");a=e,E({type:C.REPLACE})}})[w]=function(){var e,t=h;return(e={subscribe:function(e){if("object"!=typeof e||null===e)throw new TypeError("Expected the observer to be an object.");function n(){e.next&&e.next(l())}return n(),{unsubscribe:t(n)}}})[w]=function(){return this},e},s}function M(e,t){var n=t&&t.type;return"Given "+(n&&'action "'+String(n)+'"'||"an action")+', reducer "'+e+'" returned undefined. To ignore an action, you must explicitly return the previous state. If you want this reducer to hold no value, you can return null instead of undefined.'}function j(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function H(e){return function(t){var n=t.dispatch,s=t.getState;return function(t){return function(a){return"function"==typeof a?a(n,s,e):t(a)}}}}var x=H();x.withExtraArgument=H;const W=function(e){for(var t=Object.keys(e),n={},s=0;s<t.length;s++){var a=t[s];"function"==typeof e[a]&&(n[a]=e[a])}var i,o=Object.keys(n);try{!function(e){Object.keys(e).forEach(function(t){var n=e[t];if(void 0===n(void 0,{type:C.INIT}))throw new Error('Reducer "'+t+"\" returned undefined during initialization. If the state passed to the reducer is undefined, you must explicitly return the initial state. The initial state may not be undefined. If you don't want to set a value for this reducer, you can use null instead of undefined.");if(void 0===n(void 0,{type:C.PROBE_UNKNOWN_ACTION()}))throw new Error('Reducer "'+t+"\" returned undefined when probed with a random type. Don't try to handle "+C.INIT+' or other actions in "redux/*" namespace. They are considered private. Instead, you must return the current state for any unknown actions, unless it is undefined, in which case you must return the initial state, regardless of the action type. The initial state may not be undefined, but can be null.')})}(n)}catch(e){i=e}return function(e,t){if(void 0===e&&(e={}),i)throw i;for(var s=!1,a={},r=0;r<o.length;r++){var c=o[r],d=e[c],l=(0,n[c])(d,t);if(void 0===l){var h=M(c,t);throw new Error(h)}a[c]=l,s=s||l!==d}return s?a:e}}({app:(e=(()=>({angles:new Map,boundingBoxVisible:!1,camera:null,controlsEnabled:!0,displayMode:t.MESH,edges:new Map,nodes:new Map,nodesEnabled:!1,orientation:n.CORONAL,selected:null,slicesIndex:void 0,slicesWindowCenter:void 0,slicesWindowWidth:void 0,src:null,srcLoaded:!1,volumeSteps:void 0,volumeWindowCenter:void 0,volumeWindowWidth:void 0}))(),a)=>{switch(a.type){case s.APP_SET_SRC:return Object.assign({},e,{src:a.payload,srcLoaded:!1,selected:null,nodes:new Map,edges:new Map,angles:new Map});case s.APP_SET_SRC_LOADED:return Object.assign({},e,{srcLoaded:a.payload});case s.APP_SET_NODE:{const[t,n]=a.payload,s=JSON.parse(JSON.stringify(n)),i=e.nodes.get(t);let o=Object.assign({},i,s);return Object.assign({},e,{selected:i?e.selected:t,nodes:new Map(e.nodes).set(t,o)})}case s.APP_DELETE_NODE:return Object.assign({},e,{selected:e.selected===a.payload?null:e.selected,nodes:new Map([...e.nodes].filter(([e])=>e!==a.payload))});case s.APP_SELECT_NODE:return Object.assign({},e,{selected:a.payload});case s.APP_CLEAR_NODES:return Object.assign({},e,{nodes:new Map});case s.APP_SET_EDGE:{const[t,n]=a.payload,s=JSON.parse(JSON.stringify(n)),i=e.edges.get(t);let o=Object.assign({},i,s);return Object.assign({},e,{selected:i?e.selected:t,edges:new Map(e.edges).set(t,o)})}case s.APP_DELETE_EDGE:return Object.assign({},e,{selected:e.selected===a.payload?null:e.selected,edges:new Map([...e.edges].filter(([e])=>e!==a.payload))});case s.APP_SELECT_EDGE:return Object.assign({},e,{selected:a.payload});case s.APP_CLEAR_EDGES:return Object.assign({},e,{edges:new Map});case s.APP_SET_ANGLE:{const[t,n]=a.payload,s=JSON.parse(JSON.stringify(n)),i=e.angles.get(t);let o=Object.assign({},i,s);return Object.assign({},e,{selected:i?e.selected:t,angles:new Map(e.angles).set(t,o)})}case s.APP_DELETE_ANGLE:return Object.assign({},e,{selected:e.selected===a.payload?null:e.selected,angles:new Map([...e.angles].filter(([e])=>e!==a.payload))});case s.APP_SELECT_ANGLE:return Object.assign({},e,{selected:a.payload});case s.APP_CLEAR_ANGLES:return Object.assign({},e,{angles:new Map});case s.APP_SET_DISPLAY_MODE:return Object.assign({},e,{boundingBoxVisible:a.payload===t.SLICES,displayMode:a.payload});case s.APP_SET_ORIENTATION:return Object.assign({},e,{slicesIndex:void 0,orientation:a.payload});case s.APP_SET_NODES_ENABLED:return Object.assign({},e,{nodesEnabled:a.payload});case s.APP_SET_BOUNDINGBOX_VISIBLE:return Object.assign({},e,{boundingBoxVisible:a.payload});case s.APP_SET_SLICES_INDEX:return Object.assign({},e,{slicesIndex:a.payload});case s.APP_SET_SLICES_WINDOW_WIDTH:return Object.assign({},e,{slicesWindowWidth:a.payload});case s.APP_SET_SLICES_WINDOW_CENTER:return Object.assign({},e,{slicesWindowCenter:a.payload});case s.APP_SET_VOLUME_STEPS:return Object.assign({},e,{volumeSteps:a.payload});case s.APP_SET_VOLUME_WINDOW_WIDTH:return Object.assign({},e,{volumeWindowWidth:a.payload});case s.APP_SET_VOLUME_WINDOW_CENTER:return Object.assign({},e,{volumeWindowCenter:a.payload});case s.APP_SET_CAMERA:return Object.assign({},e,{camera:Object.assign({},e.camera,a.payload)});case s.APP_SET_CONTROLS_ENABLED:return Object.assign({},e,{controlsEnabled:a.payload})}return e}}),V=e=>I(W,e,function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return function(e){return function(){var n=e.apply(void 0,arguments),s=function(){throw new Error("Dispatching while constructing your middleware is not allowed. Other middleware would not be applied to this dispatch.")},a={getState:n.getState,dispatch:function(){return s.apply(void 0,arguments)}},i=t.map(function(e){return e(a)});return function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{},s=Object.keys(n);"function"==typeof Object.getOwnPropertySymbols&&(s=s.concat(Object.getOwnPropertySymbols(n).filter(function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),s.forEach(function(t){j(e,t,n[t])})}return e}({},n,{dispatch:s=function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return 0===t.length?function(e){return e}:1===t.length?t[0]:t.reduce(function(e,t){return function(){return e(t.apply(void 0,arguments))}})}.apply(void 0,i)(n.dispatch)})}}}(x));class F{}F.fontSize=1.5,F.movedEventString="-moved",F.titleIdString="-title",F.nodeSizeRatio=50,F.splashBackSize=5,F.zoomFactor=2.5,F.minLoadingMS=500,F.maxAnimationSteps=25,F.minFrameMS=15,F.minTimeForThrottle=5*F.minFrameMS,F.nodeColors={selected:"#76ff03",hovered:"#f50057",normal:"#00b0ff"},F.edgeColors={selected:"#c0ff8c",hovered:"#ff89b3",normal:"#8cdbff"},F.colorValues={red:"#f50057",blue:"#00b0ff",black:"#000000",white:"#ffffff",yellow:"#ffeb3b",green:"#76ff03",lightRed:"#f77777"},F.lightValues={ambientLightColor:13684944,ambientLightIntensity:1,directionalLight1Color:16777215,directionalLight1Intensity:.75,directionalLight2Color:10584,directionalLight2Intensity:.5},F.cameraValues={near:.05,far:1e4,fov:45,maxPolarAngle:165,rotateSpeed:.5,zoomSpeed:1,dampingFactor:.25,minDistance:0};class G{static getFileExtension(e){return e.substring(e.lastIndexOf(".")+1)}static getNodeWithHighestId(e){return e.size?Math.max.apply(Math,[...e].map(([e])=>this.getNodeIdNumber(e))):-1}static getEdgeWithHighestId(e){return e.size?Math.max.apply(Math,[...e].map(([e])=>this.getNodeIdNumber(e))):-1}static getNodeIdNumber(e){return Number(e.split("-")[1])}static getNextNodeId(e){return"node-"+Number(this.getNodeWithHighestId(e)+1)}static getNextEdgeId(e){return"edge-"+Number(this.getEdgeWithHighestId(e)+1)}static getGeometryCenter(e){let t;return(t=e instanceof THREE.BufferGeometry?(new THREE.Geometry).fromBufferGeometry(e):e).computeBoundingSphere(),t.boundingSphere.center}static getCameraStateFromEntity(e){let t,n,s,a=e.object3DMap.mesh;if(a){const e=a.geometry;return e.boundingSphere||e.computeBoundingSphere(),t=a.position,s=F.zoomFactor*e.boundingSphere.radius/Math.tan(F.cameraValues.fov*Math.PI/180),(n=new THREE.Vector3).copy(t),n.z+=s,{target:t,position:n}}return null}static getCameraStateFromNode(e,t){if(!e)return null;let n=new THREE.Vector3;n.copy(oe.stringToVector3(e.target));let s=new THREE.Vector3;s.copy(oe.stringToVector3(e.position));let a=s.clone().sub(n.clone()).normalize(),i=new THREE.Vector3;return i.copy(s),i.add(a.clone().multiplyScalar(t*F.zoomFactor)),{target:n,position:i}}}class B{static get Object(){return{schema:{src:{type:"model",default:""},dracoDecoderPath:{type:"string",default:""}},init(){this.model=null,this.loader=new THREE.GLTFLoader,THREE.DRACOLoader.setDecoderPath(this.data.dracoDecoderPath),this.loader.setDRACOLoader(new THREE.DRACOLoader)},update(){let e=this,t=this.el,n=this.data.src;n&&(this.remove(),this.loader.load(n,function(n){let s=re.setup(n);e.model=s.mesh,t.setObject3D("mesh",e.model),t.sceneEl.emit(k.LOADED,{format:"gltf",model:e.model}),t.sceneEl.emit(k.MESH_DISTANCE,{dist:s.maxDist},!0)},void 0,function(e){console.warn(e&&e.message?e.message:"Failed to load glTF model"),t.sceneEl.emit(k.ERROR,{format:"gltf",src:n})}))},remove(){this.model&&this.el.removeObject3D("mesh")}}}static get Tag(){return"al-gltf-model"}}class k{}k.LOADED="al-model-loaded",k.MESH_DISTANCE="al-mesh-distance",k.ERROR="al-model-error";class U{constructor(){}load(e,t){return new Promise((n,s)=>{const a=new XMLHttpRequest;a.open("GET",e,!0),a.onload=(()=>{let e=JSON.parse(a.responseText);e=this._mapfiles(e.baseurl,e.series);const i=new AMI.VolumeLoader(t);i.load(e).then(()=>{const e=i.data[0].mergeSeries(i.data)[0].stack[0];i.free(),n(e)}).catch(e=>{console.log("Volume load error"),s(e)})}),a.onerror=(e=>{s(e)}),a.send()})}_mapfiles(e,t){return t.map(t=>(e.endsWith("/")||(e+="/"),`${e}${t}`))}}class z{static get Object(){return{schema:{src:{type:"model",default:""}},init(){this.onEnterVR=this.onEnterVR.bind(this),this.onExitVR=this.onExitVR.bind(this),this.model=null,this.loader=new U},update(){let e=this.el,t=this.data.src;t&&(this.remove(),this.loader.load(t,e).then(e=>{console.log("stack loaded",e)}))},remove(){this.model&&this.el.removeObject3D("mesh")}}}static get Tag(){return"al-volumetric-model"}}class ${static get Object(){return{schema:{target:{type:"vec3"},scale:{type:"number",default:1},selected:{type:"boolean"},nodesEnabled:{type:"boolean"}},bindListeners(){this.elMouseDown=this.elMouseDown.bind(this),this.canvasMouseUp=this.canvasMouseUp.bind(this),this.elRaycasterIntersected=this.elRaycasterIntersected.bind(this),this.elRaycasterIntersectedCleared=this.elRaycasterIntersectedCleared.bind(this)},addListeners(){this.el.addEventListener("mousedown",this.elMouseDown,{capture:!1,once:!1,passive:!0}),this.el.sceneEl.canvas.addEventListener("mouseup",this.canvasMouseUp,{capture:!1,once:!1,passive:!0}),this.el.addEventListener("raycaster-intersected",this.elRaycasterIntersected,{capture:!1,once:!1,passive:!0}),this.el.addEventListener("raycaster-intersected-cleared",this.elRaycasterIntersectedCleared,{capture:!1,once:!1,passive:!0})},removeListeners(){this.el.removeEventListener("mousedown",this.elMouseDown),this.el.removeEventListener("mouseup",this.canvasMouseUp),this.el.removeEventListener("raycaster-intersected",this.elRaycasterIntersected),this.el.removeEventListener("raycaster-intersected-cleared",this.elRaycasterIntersectedCleared)},elMouseDown(e){this.el.sceneEl.emit(K.SELECTED,{id:this.el.id},!0),this.data.nodesEnabled&&(this.state.mouseDown=!0,this.el.sceneEl.emit(K.CONTROLS_DISABLED,{},!0))},canvasMouseUp(e){if(this.data.nodesEnabled){let e=this.state;e.dragging=!1,e.mouseDown=!1,this.el.sceneEl.emit(K.CONTROLS_ENABLED,{},!0)}},elRaycasterIntersected(e){this.state.hovered=!0,this.el.sceneEl.emit(K.INTERSECTION,{id:this.el.id},!0)},elRaycasterIntersectedCleared(e){let t=this.state;t.hovered=!1,t.mouseDown&&t.selected&&(t.dragging=!0),this.el.sceneEl.emit(K.INTERSECTION_CLEARED,{},!0)},init(){this.tickFunction=AFRAME.utils.throttle(this.tickFunction,F.minFrameMS,this),this.bindListeners(),this.addListeners();const e=this.data;let t=this.el;const n=t.sceneEl.camera.el.object3DMap.camera,s=new THREE.SphereGeometry(e.scale,16,16);let a=new THREE.MeshBasicMaterial;const i=new THREE.Mesh(s,a);t.setObject3D("mesh",i);let o=oe.objectToVector3(e.target);this.state={selected:!0,hovered:!1,geometry:s,material:a,mesh:i,camera:n,target:o,dragging:!1}},update(){let e=this.state;e.target=this.data.target,e.selected=this.data.selected},tickFunction(){let e=this.state;this.data.nodesEnabled&&e.dragging&&this.el.sceneEl.emit(K.DRAGGING,{id:this.el.id},!0),e.material.color=e.hovered||e.dragging?new THREE.Color(F.nodeColors.hovered):e.selected?new THREE.Color(F.nodeColors.selected):new THREE.Color(F.nodeColors.normal)},tick(){this.tickFunction()},remove(){this.removeListeners(),this.el.removeObject3D("mesh")}}}static get Tag(){return"al-node"}}class K{}K.SELECTED="al-node-selected",K.INTERSECTION="al-node-intersection",K.INTERSECTION_CLEARED="al-node-intersection-cleared",K.DRAGGING="al-node-dragging",K.CONTROLS_ENABLED="al-controls-enabled",K.CONTROLS_DISABLED="al-controls-disabled",K.ANIMATION_STARTED="al-animation-started";class X{static get Object(){return{dependencies:["raycaster"],schema:{nodesEnabled:{type:"boolean"}},bindListeners(){this.canvasMouseDown=this.canvasMouseDown.bind(this),this.elRaycasterIntersected=this.elRaycasterIntersected.bind(this),this.elRaycasterIntersectedCleared=this.elRaycasterIntersectedCleared.bind(this),this.elClick=this.elClick.bind(this),this.canvasMouseUp=this.canvasMouseUp.bind(this),this.elMouseDown=this.elMouseDown.bind(this),this.elMouseUp=this.elMouseUp.bind(this)},addListeners(){this.el.sceneEl.canvas.addEventListener("mousedown",this.canvasMouseDown,{capture:!1,once:!1,passive:!0}),this.el.sceneEl.canvas.addEventListener("mouseup",this.canvasMouseUp,{capture:!1,once:!1,passive:!0}),this.el.addEventListener("raycaster-intersected",this.elRaycasterIntersected,{capture:!1,once:!1,passive:!0}),this.el.addEventListener("raycaster-intersected-cleared",this.elRaycasterIntersectedCleared,!1),this.el.addEventListener("click",this.elClick,{capture:!1,once:!1,passive:!0}),this.el.addEventListener("mousedown",this.elMouseDown,{capture:!1,once:!1,passive:!0}),this.el.addEventListener("mouseup",this.elMouseUp,{capture:!1,once:!1,passive:!0})},removeListeners(){this.el.sceneEl.canvas.removeEventListener("mousedown",this.canvasMouseDown),this.el.sceneEl.canvas.removeEventListener("mouseup",this.canvasMouseUp),this.el.removeEventListener("raycaster-intersected",this.elRaycasterIntersected),this.el.removeEventListener("raycaster-intersected-cleared",this.elRaycasterIntersectedCleared),this.el.removeEventListener("click",this.elClick),this.el.removeEventListener("mousedown",this.elMouseDown),this.el.removeEventListener("mouseup",this.elMouseUp)},canvasMouseDown(e){this.state.left=0===e.button},canvasMouseUp(e){oe.waitOneFrame(()=>{this.state.left=!1})},elRaycasterIntersected(e){this.state.intersecting=!0,this.el.sceneEl.emit(J.VALID_TARGET,{valid:!0},!1)},elRaycasterIntersectedCleared(e){this.state.intersecting=!1,this.el.sceneEl.emit(J.VALID_TARGET,{valid:!1},!1)},elMouseDown(e){this.data.nodesEnabled&&this.el.sceneEl.emit(K.CONTROLS_DISABLED,{},!1)},elMouseUp(e){this.data.nodesEnabled&&this.el.sceneEl.emit(K.CONTROLS_ENABLED,{},!1)},elClick(e){this.state.left&&this.data.nodesEnabled&&this.el.sceneEl.emit(J.ADD_NODE,e,!1)},init(){this.bindListeners(),this.addListeners(),this.state={left:!1,intersecting:!1}},remove(){this.removeListeners()}}}static get Tag(){return"al-node-spawner"}}class J{}J.VALID_TARGET="al-valid-target",J.ADD_NODE="al-add-node";class Y{static get Object(){return{dependencies:["camera"],schema:{autoRotate:{type:"boolean"},autoRotateSpeed:{default:2},controlPosition:{type:"vec3"},dampingFactor:{default:.1},enabled:{default:!0},enableDamping:{default:!0},enableKeys:{default:!0},enablePan:{default:!0},enableRotate:{default:!0},enableZoom:{default:!0},keyPanSpeed:{default:7},maxAzimuthAngle:{type:"number",default:1/0},maxDistance:{default:1e3},maxPolarAngle:{default:AFRAME.utils.device.isMobile()?90:120},minAzimuthAngle:{type:"number",default:-1/0},minDistance:{default:1},minPolarAngle:{default:0},rotateSpeed:{default:.05},screenSpacePanning:{default:!1},controlTarget:{type:"vec3"},zoomSpeed:{type:"number",default:.5},animating:{type:"boolean",default:!1}},bindListeners(){this.canvasMouseUp=this.canvasMouseUp.bind(this),this.canvasMouseDown=this.canvasMouseDown.bind(this),this.canvasWheel=this.canvasWheel.bind(this),this.emitNewSerial=this.emitNewSerial.bind(this),this.catchAnimationCache=this.catchAnimationCache.bind(this)},addListeners(){this.el.sceneEl.canvas.addEventListener("mouseup",this.canvasMouseUp,{capture:!1,once:!1,passive:!0}),this.el.sceneEl.canvas.addEventListener("mousedown",this.canvasMouseDown,{capture:!1,once:!1,passive:!0}),this.el.sceneEl.canvas.addEventListener("wheel",this.canvasWheel,{capture:!1,once:!1,passive:!0}),this.el.sceneEl.addEventListener(Z.ANIMATION_STARTED,this.catchAnimationCache,!1)},removeListeners(){this.el.sceneEl.canvas.removeEventListener("mouseup",this.canvasMouseUp),this.el.sceneEl.canvas.removeEventListener("mousedown",this.canvasMouseDown),this.el.sceneEl.canvas.removeEventListener("wheel",this.canvasWheel),this.el.sceneEl.removeEventListener(Z.ANIMATION_STARTED,this.catchAnimationCache,!1)},catchAnimationCache(e){this.state.animationCache=e.detail.cache},emitNewSerial(){this.el.sceneEl.emit(Z.UPDATED,{cameraSerial:{position:this.state.controls.object.position,target:this.state.controls.target}},!1)},canvasMouseUp(e){document.body.style.cursor="grab",this.state.controls.enabled&&this.emitNewSerial()},canvasMouseDown(e){document.body.style.cursor="grabbing"},canvasWheel(e){window.clearTimeout(this.canvasWheel),this.canvasWheel=oe.waitOneFrame(()=>{this.emitNewSerial()})},init(){let e=this.el,t=this.data;document.body.style.cursor="grab",this.tickFunction=AFRAME.utils.throttle(this.tickFunction,F.minFrameMS,this);let n=new THREE.OrbitControls(e.getObject3D("camera"),e.sceneEl.renderer.domElement),s=oe.objectToVector3(t.controlPosition),a=oe.objectToVector3(t.controlTarget);n.object.position.copy(s),e.getObject3D("camera").position.copy(s),n.target.copy(a),this.state={controls:n,animationCache:[]},this.bindListeners(),this.addListeners(),oe.waitOneFrame(()=>{this.emitNewSerial()})},update(e){let t=this.state.controls;const n=this.data;t.target=oe.objectToVector3(n.controlTarget),t.autoRotate=n.autoRotate,t.autoRotateSpeed=n.autoRotateSpeed,t.dampingFactor=n.dampingFactor,t.enabled=n.enabled,t.enableDamping=n.enableDamping,t.enableKeys=n.enableKeys,t.enablePan=n.enablePan,t.enableRotate=n.enableRotate,t.enableZoom=n.enableZoom,t.keyPanSpeed=n.keyPanSpeed,t.maxPolarAngle=THREE.Math.degToRad(n.maxPolarAngle),t.maxAzimuthAngle=THREE.Math.degToRad(n.maxAzimuthAngle),t.maxDistance=n.maxDistance,t.minDistance=n.minDistance,t.minPolarAngle=THREE.Math.degToRad(n.minPolarAngle),t.minAzimuthAngle=THREE.Math.degToRad(n.minAzimuthAngle),t.rotateSpeed=n.rotateSpeed,t.screenSpacePanning=n.screenSpacePanning,t.zoomSpeed=n.zoomSpeed,this.el.getObject3D("camera").position.copy(oe.objectToVector3(n.controlPosition))},tickFunction(){let e=this.state.controls;if(e.enabled){if(this.data.animating){let t=this.state.animationCache.shift();e.object.position.copy(t.position),this.el.getObject3D("camera").position.copy(t.position),e.target.copy(t.target),0===this.state.animationCache.length&&this.el.sceneEl.emit(Z.ANIMATION_FINISHED,{},!1)}e.enabled&&(e.enableDamping||e.autoRotate)&&e.update()}},tick(){this.tickFunction()},remove(){this.removeEventListener();let e=this.state;e.controls.dispose(),e=null}}}static get Tag(){return"al-orbit-control"}}class Z{}Z.UPDATED="al-orbit-controls-updated",Z.ANIMATION_STARTED="al-orbit-controls-animation-started",Z.ANIMATION_FINISHED="al-orbit-controls-animation-finished";class q{static get Object(){return{schema:{},vertexShader:"\n      varying vec3 vNormal;\n\n      void main()\n      {\n          vNormal = normalize( normalMatrix * normal );\n          gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n      }\n      ",fragmentShader:"\n      varying vec3 vNormal;\n      uniform float r;\n      uniform float g;\n      uniform float b;\n      uniform float a;\n      uniform float c;\n\n      void main()\n      {\n          float intensity = pow( c - dot( vNormal, vec3( 0.0, 0.0, 1.0 ) ), 4.0 );\n          gl_FragColor = vec4(r, g, b, a) * intensity;\n      }",init(){}}}static get Tag(){return"al-halo"}}class Q{static get Object(){return{schema:{detail:{default:0,min:0,max:5,type:"int"},radius:{default:1,min:0}},init(e){this.geometry=new THREE.TetrahedronGeometry(e.radius,e.detail),this.geometry.applyMatrix((new THREE.Matrix4).makeRotationAxis(new THREE.Vector3(1,0,-1).normalize(),Math.atan(Math.sqrt(2))))}}}static get Tag(){return"al-spinner"}}class ee{static get Object(){return{schema:{distanceFromTarget:{type:"number",default:.1},target:{type:"vec3"}},init(e){if(this.tickFunction=AFRAME.utils.throttle(this.tickFunction,F.minFrameMS,this),this.data.target){let e=oe.objectToVector3(this.data.target);this.state={distanceFromTarget:this.data.distanceFromTarget,target:e}}else this.state={distanceFromTarget:this.data.distanceFromTarget,target:new THREE.Vector3(0,0,0)}},update(e){let t=oe.objectToVector3(this.data.target);this.state={distanceFromTarget:this.data.distanceFromTarget,target:t}},tickFunction(){let e=this.el,t=this.state;const n=e.sceneEl.camera.position,s=t.target.clone().sub(n.clone()).normalize();e.object3D.position.copy(s.multiplyScalar(t.distanceFromTarget)),e.object3D.lookAt(n)},tick(){this.tickFunction()}}}static get Tag(){return"al-fixed-to-orbit-camera"}}class te{static get Object(){return{schema:{},init(){this.tickFunction=AFRAME.utils.throttle(this.tickFunction,F.minFrameMS,this)},tickFunction(){this.el.object3D.lookAt(this.el.sceneEl.camera.position)},tick(){this.tickFunction()}}}static get Tag(){return"al-look-to-camera"}}class ne{static get Object(){return{schema:{},init(e){let t=this.el.object3DMap.mesh;t.renderOrder=999,t.material.depthTest=!1}}}static get Tag(){return"al-render-overlaid"}}class se{static get Object(){return{schema:{},init(e){let t=this.el.object3DMap.text;t.renderOrder=999,t.material.depthTest=!1}}}static get Tag(){return"al-render-overlaid-text"}}class ae{static get Object(){return{schema:{},init(e){let t=this.el.object3DMap.line;t.renderOrder=998,t.material.depthTest=!1,t.material.color=new THREE.Color(F.colorValues.blue)}}}static get Tag(){return"al-render-overlaid-line"}}class ie{static createAframeComponents(){AFRAME.registerShader(q.Tag,q.Object),AFRAME.registerGeometry(Q.Tag,Q.Object),AFRAME.registerComponent(B.Tag,B.Object),AFRAME.registerComponent(z.Tag,z.Object),AFRAME.registerComponent($.Tag,$.Object),AFRAME.registerComponent(X.Tag,X.Object),AFRAME.registerComponent(Y.Tag,Y.Object),AFRAME.registerComponent(ee.Tag,ee.Object),AFRAME.registerComponent(te.Tag,te.Object),AFRAME.registerComponent(ne.Tag,ne.Object),AFRAME.registerComponent(se.Tag,se.Object),AFRAME.registerComponent(ae.Tag,ae.Object)}}class oe{static enableCamera(e,t){e.setAttribute("al-orbit-control",`enabled: ${t}`)}static waitOneFrame(e){window.setTimeout(()=>{e()},F.minFrameMS)}static objectToVector3(e){let t=new THREE.Vector3;return t.x=e.x,t.y=e.y,t.z=e.z,t}static worldToScreen(e,t,n){const s=e.clone();return s.project(t),s.x=Math.round((s.x+1)*n.offsetWidth/2),s.y=Math.round((1-s.y)*n.offsetHeight/2),s.z=0,s}static vector3ToString(e){return e.toArray().join(" ")}static stringToVector3(e){let t=e.split(" "),n=new THREE.Vector3;return n.x=Number(t[0]),n.y=Number(t[1]),n.z=Number(t[2]),n}static slerp(e,t,n){const s=n,a=e,i=t;let o=a.angleTo(i);if(o){o=THREE.Math.clamp(o,-.99,.99);const e=Math.sin(1-s)*o,t=Math.sin(s*o),n=Math.sin(o),r=e/n,c=t/n,d=a.clone().multiplyScalar(r),l=i.clone().multiplyScalar(c);return d.add(l)}return null}static sendAnimationCache(e,t,n,s,a){let i=[];for(let e=1;e<=F.maxAnimationSteps;e++){let o=e/F.maxAnimationSteps;i.push({position:s?oe.slerp(t.position.clone(),n.position.clone(),o):n.position,target:a?oe.slerp(t.target.clone(),n.target.clone(),o):n.target})}e.emit(Z.ANIMATION_STARTED,{cache:i},!1)}}class re{static setup(e){const t=e.scene||e.scenes[0];let n;t instanceof THREE.Mesh?n=t:t.children.forEach(e=>{e instanceof THREE.Mesh&&(n=e)});let s=n.geometry;s instanceof THREE.BufferGeometry&&(s=(new THREE.Geometry).fromBufferGeometry(n.geometry));let a=s.vertices.reduce((e,t)=>new THREE.Vector3(Math.min(e.length(),t.length()),0,0)).x;return{mesh:n,maxDist:a}}}var ce,de;!function(e){e.LOCK="LOCK",e.MESH="MESH"}(ce||(ce={})),function(e){e.GLTF="gltf",e.GLB="glb"}(de||(de={}));class le{constructor(){this._intersectingNode=null,this._isShiftDown=!1,this.width="640px",this.height="480px",this.debug=!1,this.spinnerColor="#fff"}async load(e){const n=G.getFileExtension(e);if(Object.values(de).includes(n)){if(this.displayMode!==t.MESH)throw new Error("When setting 'src' to a mesh file you must set 'displayMode' to 'mesh'")}else if(this.displayMode===t.MESH)throw new Error("When setting 'src' to a non-mesh file you must set 'displayMode' to either 'slices' or 'volume'");this.src?(this._setSrc(null),setTimeout(()=>{this._setSrc(e)},F.minLoadingMS)):this._setSrc(e)}resize(){if(this.srcLoaded){const e=this._scene.sceneEl.camera,t=this._scene.sceneEl.renderer;e.aspect=this._container.offsetWidth/this._container.offsetHeight,e.updateProjectionMatrix(),t.setSize(this._container.offsetWidth,this._container.offsetHeight)}}async setNode(e){this._setNode(e)}async setNodes(e){this._setNodes(e)}async deleteNode(e){this._deleteNode(e)}async clearNodes(){this._clearNodes()}async selectNode(e){this._selectNode(e,!0)}async setEdge(e){this._setEdge(e)}async setDisplayMode(e){this.appSetDisplayMode(e)}async setNodesEnabled(e){this._setNodesEnabled(e)}async setBoundingBoxVisible(e){this._setBoundingBoxVisible(e)}componentWillLoad(){ie.createAframeComponents(),this.store.setStore(V({})),this.store.mapStateToProps(this,e=>{const{app:{angles:t,boundingBoxVisible:n,camera:s,controlsEnabled:a,displayMode:i,edges:o,nodes:r,nodesEnabled:c,orientation:d,selected:l,slicesIndex:h,slicesWindowCenter:E,slicesWindowWidth:p,src:u,srcLoaded:m,volumeSteps:g,volumeWindowCenter:_,volumeWindowWidth:b}}=e;return{angles:t,boundingBoxVisible:n,camera:s,controlsEnabled:a,displayMode:i,edges:o,nodes:r,nodesEnabled:c,orientation:d,selected:l,slicesIndex:h,slicesWindowCenter:E,slicesWindowWidth:p,src:u,srcLoaded:m,volumeSteps:g,volumeWindowCenter:_,volumeWindowWidth:b}}),this.store.mapDispatchToProps(this,{appClearAngles:_,appClearEdges:p,appClearNodes:d,appDeleteAngle:m,appDeleteEdge:h,appDeleteNode:r,appSelectAngle:g,appSelectEdge:E,appSelectNode:c,appSetAngle:u,appSetBoundingBoxVisible:y,appSetCamera:O,appSetControlsEnabled:L,appSetDisplayMode:b,appSetEdge:l,appSetNode:o,appSetNodesEnabled:S,appSetOrientation:v,appSetSlicesIndex:f,appSetSlicesWindowCenter:A,appSetSlicesWindowWidth:T,appSetSrc:a,appSetSrcLoaded:i,appSetVolumeSteps:P,appSetVolumeWindowCenter:D,appSetVolumeWindowWidth:N}),this._animationFinished=this._animationFinished.bind(this),this._canvasMouseDown=this._canvasMouseDown.bind(this),this._canvasMouseUp=this._canvasMouseUp.bind(this),this._controlsDisabledHandler=this._controlsDisabledHandler.bind(this),this._controlsEnabledHandler=this._controlsEnabledHandler.bind(this),this._controlsUpdated=this._controlsUpdated.bind(this),this._intersectingNodeEventHandler=this._intersectingNodeEventHandler.bind(this),this._intersectionClearedEventHandler=this._intersectionClearedEventHandler.bind(this),this._nodeMovedEventHandler=this._nodeMovedEventHandler.bind(this),this._nodeSelectedEventHandler=this._nodeSelectedEventHandler.bind(this),this._setNodeEventHandler=this._setNodeEventHandler.bind(this),this._srcLoaded=this._srcLoaded.bind(this),this._validTargetEventHandler=this._validTargetEventHandler.bind(this)}_renderSpinner(){return this.srcLoaded?null:e("a-entity",{"al-fixed-to-orbit-camera":`\n          distanceFromTarget: 20;\n          target: ${this.camera?this.camera.position:new THREE.Vector3(0,0,0)};\n        `},e("a-entity",{animation:"property: rotation; to: 0 120 0; loop: true; dur: 1000; easing: easeInOutQuad",geometry:"primitive: al-spinner;",material:`color: ${this.spinnerColor};`}))}_renderSrc(){if(!this.src)return null;let n=0,s=null;switch(this._boundingSphereRadius&&(s=e("a-entity",{class:"collidable",id:"back-board",geometry:`primitive: plane; height: ${n=this._boundingSphereRadius*F.splashBackSize}; width: ${n}`,"al-fixed-to-orbit-camera":`\n          distanceFromTarget: ${this._boundingSphereRadius};\n          target: ${this.camera?this.camera.target:new THREE.Vector3(0,0,0)};\n        `,material:"\n          wireframe: true;\n          side: double;\n        ",ref:e=>this._backBoard=e})),this.displayMode){case t.MESH:return[e("a-entity",{"al-node-spawner":`\n              nodesEnabled: ${this.nodesEnabled};\n            `,"al-edge-spawner":!0,class:"collidable",id:"target-entity","al-gltf-model":`\n              src: url(${this.src});\n              dracoDecoderPath: ${this.dracoDecoderPath};\n            `,position:"0 0 0",scale:"1 1 1",ref:e=>this._targetEntity=e}),s];default:return[e("a-entity",{"al-node-spawner":`\n              nodesEnabled: ${this.nodesEnabled};\n            `,"al-edge-spawner":!0,class:"collidable",id:"target-entity","al-volumetric-model":`\n              src: url(${this.src});\n            `,position:"0 0 0",scale:"1 1 1",ref:e=>this._targetEntity=e}),s]}}_renderNodes(){return[...this.nodes].map(t=>{const[n,s]=t;let a=new THREE.Vector3(0,2.5,0);return a.multiplyScalar(s.scale),e("a-entity",{class:"collidable",id:n,position:s.position,"al-node":`\n            target: ${s.target};\n            scale: ${s.scale};\n            selected: ${this.selected===n};\n            nodesEnabled: ${this.nodesEnabled};\n          `},e("a-entity",{text:`\n              value: ${s.text};\n              side: double;\n              align: center;\n              baseline: bottom;\n              anchor: center;\n            `,"al-look-to-camera":!0,"al-render-overlaid-text":!0,position:oe.vector3ToString(a),id:`${n}-label`}))})}_renderEdges(){return[...this.edges].map(t=>{const[n,s]=t;let a="",i=new THREE.Vector3(0,0,0),o=0;if(this.nodes.get(s.node2Id)){const e=this.nodes.get(s.node1Id).position,t=this.nodes.get(s.node2Id).position;a=`\n        start: ${this.nodes.get(s.node1Id).position};\n        end: ${this.nodes.get(s.node2Id).position};\n        `;const n=oe.stringToVector3(e),r=oe.stringToVector3(t);o=n.clone().distanceTo(r.clone()),i.copy(n.clone().sub(r.clone()).normalize().multiplyScalar(o/2))}return e("a-entity",{class:"collidable",id:n,line:a,"al-render-overlaid-line":!0},e("a-entity",{id:`${n}-title`,text:`\n              value: ${o+" units"};\n              side: double;\n              align: center;\n              baseline: bottom;\n              anchor: center;\n            `,"al-look-to-camera":!0,"al-render-overlaid-text":!0,position:oe.vector3ToString(i)}))})}_renderLights(){return[e("a-entity",{id:"light-1",light:"type: directional; color: #ffffff; intensity: 0.75",position:"1 1 1"}),e("a-entity",{id:"light-2",light:"type: directional; color: #002958; intensity: 0.5",position:"-1 -1 -1"}),e("a-entity",{id:"light-3",light:"type: ambient; color: #d0d0d0; intensity: 1"})]}_renderCamera(){return e("a-camera",{fov:F.cameraValues.fov,near:F.cameraValues.near,"look-controls":"enabled: false",far:F.cameraValues.far,id:"mainCamera",cursor:"rayOrigin: mouse",raycaster:"objects: .collidable","al-orbit-control":`\n          maxPolarAngle: ${F.cameraValues.maxPolarAngle};\n          minDistance: ${F.cameraValues.minDistance};\n          screenSpacePanning: true;\n          rotateSpeed: ${F.cameraValues.rotateSpeed};\n          zoomSpeed: ${F.cameraValues.zoomSpeed};\n          enableDamping: true;\n          dampingFactor: ${F.cameraValues.dampingFactor};\n          controlTarget: ${oe.vector3ToString(this.camera?this.camera.target:new THREE.Vector3(0,0,0))};\n          controlPosition: ${oe.vector3ToString(this.camera?this.camera.position:new THREE.Vector3(0,0,0))};\n          enabled: ${this.controlsEnabled};\n          animating: ${!(!this.camera||!this.camera.animating)&&this.camera.animating}\n        `,ref:e=>this._camera=e},this._renderSpinner())}_renderScene(){return e("a-scene",{embedded:!0,renderer:"colorManagement: true;","vr-mode-ui":"enabled: false",ref:e=>this._scene=e,ortho:!0},this._renderSrc(),this._renderNodes(),this._renderEdges(),this._renderLights(),this._renderCamera())}render(){return e("div",{id:"al-container",style:{width:this.width,height:this.height},ref:e=>this._container=e},this._renderScene())}_createEdge(e,t){const n={node1Id:e,node2Id:t},s=G.getNextEdgeId(this.edges);this._setEdge([s,n])}_getAppState(){return this.store.getState().app}_clearNodes(){this.appClearNodes(),this.onChanged.emit(this._getAppState())}_setNodes(e){e.forEach((e,t)=>{this.appSetNode([t,e])}),this.onChanged.emit(this._getAppState())}_deleteNode(e){this.appDeleteNode(e),this.onChanged.emit(this._getAppState())}_setNode(e){oe.waitOneFrame(()=>{this.appSetNode(e),this.onChanged.emit(this._getAppState())})}_setEdge(e){this.appSetEdge(e),this.onChanged.emit(this._getAppState())}_selectNode(e,t){if(t&&e!==this.selected){let t={position:this.camera.position.clone(),target:this.camera.target.clone()},n={position:new THREE.Vector3(-1,-1,-1),target:new THREE.Vector3(-1,-1,-1)},s=G.getCameraStateFromNode(this.nodes.get(e),this._boundingSphereRadius);if(s){const a=s.position.distanceTo(this.camera.position);let i;i=this.camera.target?s.target.distanceTo(this.camera.target):0,(a>0||i>0)&&(n.position.copy(a>0?s.position:this.camera.position),n.target.copy(i>0?s.target:this.camera.target),oe.sendAnimationCache(this._scene,t,n,a>0,i>0),oe.waitOneFrame(()=>{this.appSetCamera({animating:!0}),this.appSelectNode(e),this.onChanged.emit(this._getAppState())}))}}else this.appSelectNode(e),this.onChanged.emit(this._getAppState())}_setNodesEnabled(e){this.appSetNodesEnabled(e),this.onChanged.emit(this._getAppState())}_setBoundingBoxVisible(e){this.appSetBoundingBoxVisible(e),this.onChanged.emit(this._getAppState())}_setSrc(e){this.appSetSrc(e),this.onChanged.emit(this._getAppState())}_srcLoaded(){const e=this._targetEntity.object3DMap.mesh;e.geometry.computeBoundingSphere(),this._boundingSphereRadius=e.geometry.boundingSphere.radius;let t=G.getCameraStateFromEntity(this._targetEntity);t&&this.appSetCamera({position:t.position,target:t.target}),this.appSetSrcLoaded(!0),this.onChanged.emit(this._getAppState())}_canvasMouseDown(e){this._isShiftDown=e.shiftKey}_canvasMouseUp(e){this._isShiftDown=!1}_controlsUpdated(e){this.appSetCamera(e.detail.cameraSerial)}_controlsEnabledHandler(e){this.appSetControlsEnabled(!0),oe.enableCamera(this._camera,!0)}_controlsDisabledHandler(e){this.appSetControlsEnabled(!1),oe.enableCamera(this._camera,!1)}_intersectionClearedEventHandler(e){this._intersectingNode=null}_intersectingNodeEventHandler(e){this._intersectingNode=e.detail.id}_setNodeEventHandler(e){if(this.nodesEnabled&&this._validTarget&&null===this._intersectingNode){let t=e.detail.detail.intersection;const n=G.getNextNodeId(this.nodes),s={target:oe.vector3ToString(this._targetEntity.object3D.position),position:oe.vector3ToString(t.point),scale:this._boundingSphereRadius/F.nodeSizeRatio,text:n},a=this.selected;this._setNode([n,s]),this._isShiftDown&&this.selected&&this._createEdge(a,n)}}_validTargetEventHandler(e){this._validTarget=e.detail.valid}_animationFinished(e){this.appSetCamera({animating:!1})}_nodeSelectedEventHandler(e){null!==this._intersectingNode&&this.nodesEnabled&&null!==this.selected&&this.selected!==this._intersectingNode&&this._isShiftDown&&this._createEdge(this.selected,this._intersectingNode),this._selectNode(e.detail.id,!1)}_nodeMovedEventHandler(e){const t=e.detail.id,n=this._camera.components.raycaster;let s=n.getIntersection(this._targetEntity);s||(s=n.getIntersection(this._backBoard)),s?(this._setNode([t,{position:oe.vector3ToString(s.point)}]),this._scene.emit(t+F.movedEventString,{},!0)):console.log("No intersection!")}_addEventListeners(){this._scene.canvas.addEventListener("mousedown",this._canvasMouseDown,{capture:!1,once:!1,passive:!0}),this._scene.canvas.addEventListener("mouseup",this._canvasMouseUp,{capture:!1,once:!1,passive:!0}),this._scene.addEventListener(Z.ANIMATION_FINISHED,this._animationFinished,!1),this._scene.addEventListener(Z.UPDATED,this._controlsUpdated,!1),this._scene.addEventListener(K.CONTROLS_ENABLED,this._controlsEnabledHandler,!1),this._scene.addEventListener(K.CONTROLS_DISABLED,this._controlsDisabledHandler,!1),this._scene.addEventListener(K.DRAGGING,this._nodeMovedEventHandler,!1),this._scene.addEventListener(J.ADD_NODE,this._setNodeEventHandler,!1),this._scene.addEventListener(K.SELECTED,this._nodeSelectedEventHandler,!1),this._scene.addEventListener(J.VALID_TARGET,this._validTargetEventHandler,!1),this._scene.addEventListener(k.LOADED,this._srcLoaded,!1),this._scene.addEventListener(K.INTERSECTION,this._intersectingNodeEventHandler,!1),this._scene.addEventListener(K.INTERSECTION_CLEARED,this._intersectionClearedEventHandler,!1)}componentDidLoad(){}componentDidUpdate(){if(this._scene&&this._addEventListeners(),this.debug)try{const e=this._camera.object3DMap.text.material;e&&(e.transparent=!0)}catch(e){}}static get is(){return"uv-aleph"}static get properties(){return{angles:{state:!0},boundingBoxVisible:{state:!0},camera:{state:!0},clearNodes:{method:!0},controlsEnabled:{state:!0},debug:{type:Boolean,attr:"debug"},deleteNode:{method:!0},displayMode:{state:!0},dracoDecoderPath:{type:String,attr:"draco-decoder-path"},edges:{state:!0},height:{type:String,attr:"height"},load:{method:!0},nodes:{state:!0},nodesEnabled:{state:!0},nodesVisible:{state:!0},optionsEnabled:{state:!0},optionsVisible:{state:!0},orientation:{state:!0},resize:{method:!0},selected:{state:!0},selectNode:{method:!0},setBoundingBoxVisible:{method:!0},setDisplayMode:{method:!0},setEdge:{method:!0},setNode:{method:!0},setNodes:{method:!0},setNodesEnabled:{method:!0},slicesIndex:{state:!0},slicesWindowCenter:{state:!0},slicesWindowWidth:{state:!0},spinnerColor:{type:String,attr:"spinner-color"},src:{state:!0},srcLoaded:{state:!0},store:{context:"store"},volumeSteps:{state:!0},volumeWindowCenter:{state:!0},volumeWindowWidth:{state:!0},width:{type:String,attr:"width"}}}static get events(){return[{name:"onChanged",method:"onChanged",bubbles:!0,cancelable:!0,composed:!0}]}static get style(){return"#al-container{position:relative;font-family:sans-serif}#al-container a-scene{background-color:var(--app-background-color);display:block;width:100%;height:100%}#al-container #lut-container{display:none}#al-container .progress.container{position:absolute;top:auto!important;bottom:0!important}#al-container .progress.container .load.progress,#al-container .progress.container .parse.progress{border:none!important;height:4px!important;background-color:#fff!important}"}}export{le as UvAleph};