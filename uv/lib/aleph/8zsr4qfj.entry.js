const e=window.aleph.h;import{a as t,b as s}from"./chunk-1519ad9e.js";var i,n,a;!function(e){e[e.Backspace=8]="Backspace",e[e.Tab=9]="Tab",e[e.Enter=13]="Enter",e[e.Shift=16]="Shift",e[e.Ctrl=17]="Ctrl",e[e.Alt=18]="Alt",e[e.PauseBreak=19]="PauseBreak",e[e.CapsLock=20]="CapsLock",e[e.Escape=27]="Escape",e[e.Spacebar=32]="Spacebar",e[e.PageUp=33]="PageUp",e[e.PageDown=34]="PageDown",e[e.End=35]="End",e[e.Home=36]="Home",e[e.LeftArrow=37]="LeftArrow",e[e.UpArrow=38]="UpArrow",e[e.RightArrow=39]="RightArrow",e[e.DownArrow=40]="DownArrow",e[e.PrintScrn=44]="PrintScrn",e[e.Insert=45]="Insert",e[e.Delete=46]="Delete",e[e.Zero=48]="Zero",e[e.One=49]="One",e[e.Two=50]="Two",e[e.Three=51]="Three",e[e.Four=52]="Four",e[e.Five=53]="Five",e[e.Six=54]="Six",e[e.Seven=55]="Seven",e[e.Eight=56]="Eight",e[e.Nine=57]="Nine",e[e.a=65]="a",e[e.b=66]="b",e[e.c=67]="c",e[e.d=68]="d",e[e.e=69]="e",e[e.f=70]="f",e[e.g=71]="g",e[e.h=72]="h",e[e.i=73]="i",e[e.j=74]="j",e[e.k=75]="k",e[e.l=76]="l",e[e.m=77]="m",e[e.n=78]="n",e[e.o=79]="o",e[e.p=80]="p",e[e.q=81]="q",e[e.r=82]="r",e[e.s=83]="s",e[e.t=84]="t",e[e.u=85]="u",e[e.v=86]="v",e[e.w=87]="w",e[e.x=88]="x",e[e.y=89]="y",e[e.z=90]="z",e[e.LeftWindowKey=91]="LeftWindowKey",e[e.RightWindowKey=92]="RightWindowKey",e[e.SelectKey=93]="SelectKey",e[e.Numpad0=96]="Numpad0",e[e.Numpad1=97]="Numpad1",e[e.Numpad2=98]="Numpad2",e[e.Numpad3=99]="Numpad3",e[e.Numpad4=100]="Numpad4",e[e.Numpad5=101]="Numpad5",e[e.Numpad6=102]="Numpad6",e[e.Numpad7=103]="Numpad7",e[e.Numpad8=104]="Numpad8",e[e.Numpad9=105]="Numpad9",e[e.Multiply=106]="Multiply",e[e.NumpadPlus=107]="NumpadPlus",e[e.NumpadMinus=109]="NumpadMinus",e[e.DecimalPoint=110]="DecimalPoint",e[e.Divide=111]="Divide",e[e.F1=112]="F1",e[e.F2=113]="F2",e[e.F3=114]="F3",e[e.F4=115]="F4",e[e.F5=116]="F5",e[e.F6=117]="F6",e[e.F7=118]="F7",e[e.F8=119]="F8",e[e.F9=120]="F9",e[e.F10=121]="F10",e[e.F11=122]="F11",e[e.F12=123]="F12",e[e.NumLock=144]="NumLock",e[e.ScrollLock=145]="ScrollLock",e[e.Semicolon=186]="Semicolon",e[e.Equals=187]="Equals",e[e.Comma=188]="Comma",e[e.LessThan=188]="LessThan",e[e.Dash=189]="Dash",e[e.Period=190]="Period",e[e.GreaterThan=190]="GreaterThan",e[e.ForwardSlash=191]="ForwardSlash",e[e.QuestionMark=191]="QuestionMark",e[e.GraveAccent=192]="GraveAccent",e[e.Tilde=192]="Tilde",e[e.OpenCurlyBracket=219]="OpenCurlyBracket",e[e.OpenSquareBracket=219]="OpenSquareBracket",e[e.BackSlash=220]="BackSlash",e[e.VerticalPipe=220]="VerticalPipe",e[e.CloseCurlyBracket=221]="CloseCurlyBracket",e[e.CloseSquareBracket=221]="CloseSquareBracket",e[e.Quote=222]="Quote",e[e.CommandFF=224]="CommandFF"}(i||(i={})),function(e){e[e.Backspace=8]="Backspace",e[e.Enter=13]="Enter",e[e.Spacebar=32]="Spacebar",e[e.Hash=35]="Hash",e[e.GraveAccent=39]="GraveAccent",e[e.DoubleQuote=34]="DoubleQuote",e[e.Asterisk=42]="Asterisk",e[e.Plus=43]="Plus",e[e.Comma=44]="Comma",e[e.Minus=45]="Minus",e[e.Period=46]="Period",e[e.ForwardSlash=47]="ForwardSlash",e[e.Zero=48]="Zero",e[e.One=49]="One",e[e.Two=50]="Two",e[e.Three=51]="Three",e[e.Four=52]="Four",e[e.Five=53]="Five",e[e.Six=54]="Six",e[e.Seven=55]="Seven",e[e.Eight=56]="Eight",e[e.Nine=57]="Nine",e[e.Colon=58]="Colon",e[e.Semicolon=59]="Semicolon",e[e.LessThan=60]="LessThan",e[e.Equals=61]="Equals",e[e.GreaterThan=62]="GreaterThan",e[e.QuestionMark=63]="QuestionMark",e[e.At=64]="At",e[e.OpenSquareBracket=91]="OpenSquareBracket",e[e.BackSlash=92]="BackSlash",e[e.CloseSquareBracket=93]="CloseSquareBracket",e[e.a=97]="a",e[e.b=98]="b",e[e.c=99]="c",e[e.d=100]="d",e[e.e=101]="e",e[e.f=102]="f",e[e.g=103]="g",e[e.h=104]="h",e[e.i=105]="i",e[e.j=106]="j",e[e.k=107]="k",e[e.l=108]="l",e[e.m=109]="m",e[e.n=110]="n",e[e.o=111]="o",e[e.p=112]="p",e[e.q=113]="q",e[e.r=114]="r",e[e.s=115]="s",e[e.t=116]="t",e[e.u=117]="u",e[e.v=118]="v",e[e.w=119]="w",e[e.x=120]="x",e[e.y=121]="y",e[e.z=122]="z",e[e.OpenCurlyBracket=123]="OpenCurlyBracket",e[e.VerticalPipe=124]="VerticalPipe",e[e.CloseCurlyBracket=125]="CloseCurlyBracket",e[e.Tilde=126]="Tilde"}(n||(n={})),function(e){e.NULL="NULL",e.ERROR="ERROR",e.APP_SET_SRC="APP_SET_SRC",e.APP_SET_SRC_LOADED="APP_SET_SRC_LOADED",e.APP_SET_NODE="APP_SET_NODE",e.APP_DELETE_NODE="APP_DELETE_NODE",e.APP_SELECT_NODE="APP_SELECT_NODE",e.APP_CLEAR_NODES="APP_LOAD_NODES",e.APP_SET_EDGE="APP_SET_EDGE",e.APP_DELETE_EDGE="APP_DELETE_EDGE",e.APP_SELECT_EDGE="APP_SELECT_EDGE",e.APP_CLEAR_EDGES="APP_LOAD_EDGES",e.APP_SET_ANGLE="APP_SET_ANGLE",e.APP_DELETE_ANGLE="APP_DELETE_ANGLE",e.APP_SELECT_ANGLE="APP_SELECT_ANGLE",e.APP_CLEAR_ANGLES="APP_LOAD_ANGLES",e.APP_SET_DISPLAY_MODE="APP_SET_DISPLAY_MODE",e.APP_SET_ORIENTATION="APP_SET_ORIENTATION",e.APP_SET_NODES_ENABLED="APP_SET_NODES_ENABLED",e.APP_SET_BOUNDINGBOX_VISIBLE="APP_SET_BOUNDINGBOX_VISIBLE",e.APP_SET_SLICES_INDEX="APP_SET_SLICES_INDEX",e.APP_SET_SLICES_WINDOW_WIDTH="APP_SET_SLICES_WINDOW_WIDTH",e.APP_SET_SLICES_WINDOW_CENTER="APP_SET_SLICES_WINDOW_CENTER",e.APP_SET_VOLUME_STEPS="APP_SET_VOLUME_STEPS",e.APP_SET_VOLUME_WINDOW_WIDTH="APP_SET_VOLUME_WINDOW_WIDTH",e.APP_SET_VOLUME_WINDOW_CENTER="APP_SET_VOLUME_WINDOW_CENTER",e.APP_SET_CAMERA="APP_SET_CAMERA",e.APP_SET_CONTROLS_ENABLED="APP_SET_CONTROLS_ENABLED"}(a||(a={}));const r=e=>async(t,s)=>t({type:a.APP_SET_SRC,payload:e}),o=e=>async(t,s)=>t({type:a.APP_SET_SRC_LOADED,payload:e}),d=e=>async(t,s)=>t({type:a.APP_SET_NODE,payload:e}),l=e=>async(t,s)=>t({type:a.APP_DELETE_NODE,payload:e}),c=e=>async(t,s)=>t({type:a.APP_SELECT_NODE,payload:e}),h=e=>async(t,s)=>t({type:a.APP_CLEAR_NODES,payload:e}),p=e=>async(t,s)=>t({type:a.APP_SET_EDGE,payload:e}),u=e=>async(t,s)=>t({type:a.APP_DELETE_EDGE,payload:e}),E=e=>async(t,s)=>t({type:a.APP_SELECT_EDGE,payload:e}),g=e=>async(t,s)=>t({type:a.APP_CLEAR_EDGES,payload:e}),m=e=>async(t,s)=>t({type:a.APP_SET_ANGLE,payload:e}),_=e=>async(t,s)=>t({type:a.APP_DELETE_ANGLE,payload:e}),S=e=>async(t,s)=>t({type:a.APP_SELECT_ANGLE,payload:e}),b=e=>async(t,s)=>t({type:a.APP_CLEAR_ANGLES,payload:e}),y=e=>async(t,s)=>t({type:a.APP_SET_DISPLAY_MODE,payload:e}),v=e=>async(t,s)=>t({type:a.APP_SET_NODES_ENABLED,payload:e}),T=e=>async(t,s)=>t({type:a.APP_SET_BOUNDINGBOX_VISIBLE,payload:e}),f=e=>async(t,s)=>t({type:a.APP_SET_ORIENTATION,payload:e}),A=e=>async(t,s)=>t({type:a.APP_SET_SLICES_INDEX,payload:e}),O=e=>async(t,s)=>t({type:a.APP_SET_SLICES_WINDOW_WIDTH,payload:e}),w=e=>async(t,s)=>t({type:a.APP_SET_SLICES_WINDOW_CENTER,payload:e}),P=e=>async(t,s)=>t({type:a.APP_SET_VOLUME_STEPS,payload:e}),D=e=>async(t,s)=>t({type:a.APP_SET_VOLUME_WINDOW_WIDTH,payload:e}),L=e=>async(t,s)=>t({type:a.APP_SET_VOLUME_WINDOW_CENTER,payload:e}),N=e=>async(t,s)=>t({type:a.APP_SET_CAMERA,payload:e}),I=e=>async(t,s)=>t({type:a.APP_SET_CONTROLS_ENABLED,payload:e});var C=function(e){var t,s=("undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof module?module:Function("return this")()).Symbol;return"function"==typeof s?s.observable?t=s.observable:(t=s("observable"),s.observable=t):t="@@observable",t}(),M=function(){return Math.random().toString(36).substring(7).split("").join(".")},R={INIT:"@@redux/INIT"+M(),REPLACE:"@@redux/REPLACE"+M(),PROBE_UNKNOWN_ACTION:function(){return"@@redux/PROBE_UNKNOWN_ACTION"+M()}};function k(e,t,s){var i;if("function"==typeof t&&"function"==typeof s||"function"==typeof s&&"function"==typeof arguments[3])throw new Error("It looks like you are passing several store enhancers to createStore(). This is not supported. Instead, compose them together to a single function");if("function"==typeof t&&void 0===s&&(s=t,t=void 0),void 0!==s){if("function"!=typeof s)throw new Error("Expected the enhancer to be a function.");return s(k)(e,t)}if("function"!=typeof e)throw new Error("Expected the reducer to be a function.");var n=e,a=t,r=[],o=r,d=!1;function l(){o===r&&(o=r.slice())}function c(){if(d)throw new Error("You may not call store.getState() while the reducer is executing. The reducer has already received the state as an argument. Pass it down from the top reducer instead of reading it from the store.");return a}function h(e){if("function"!=typeof e)throw new Error("Expected the listener to be a function.");if(d)throw new Error("You may not call store.subscribe() while the reducer is executing. If you would like to be notified after the store has been updated, subscribe from a component and invoke store.getState() in the callback to access the latest state. See https://redux.js.org/api-reference/store#subscribe(listener) for more details.");var t=!0;return l(),o.push(e),function(){if(t){if(d)throw new Error("You may not unsubscribe from a store listener while the reducer is executing. See https://redux.js.org/api-reference/store#subscribe(listener) for more details.");t=!1,l();var s=o.indexOf(e);o.splice(s,1)}}}function p(e){if(!function(e){if("object"!=typeof e||null===e)return!1;for(var t=e;null!==Object.getPrototypeOf(t);)t=Object.getPrototypeOf(t);return Object.getPrototypeOf(e)===t}(e))throw new Error("Actions must be plain objects. Use custom middleware for async actions.");if(void 0===e.type)throw new Error('Actions may not have an undefined "type" property. Have you misspelled a constant?');if(d)throw new Error("Reducers may not dispatch actions.");try{d=!0,a=n(a,e)}finally{d=!1}for(var t=r=o,s=0;s<t.length;s++)(0,t[s])();return e}return p({type:R.INIT}),(i={dispatch:p,subscribe:h,getState:c,replaceReducer:function(e){if("function"!=typeof e)throw new Error("Expected the nextReducer to be a function.");n=e,p({type:R.REPLACE})}})[C]=function(){var e,t=h;return(e={subscribe:function(e){if("object"!=typeof e||null===e)throw new TypeError("Expected the observer to be an object.");function s(){e.next&&e.next(c())}return s(),{unsubscribe:t(s)}}})[C]=function(){return this},e},i}function H(e,t){var s=t&&t.type;return"Given "+(s&&'action "'+String(s)+'"'||"an action")+', reducer "'+e+'" returned undefined. To ignore an action, you must explicitly return the previous state. If you want this reducer to hold no value, you can return null instead of undefined.'}function W(e,t,s){return t in e?Object.defineProperty(e,t,{value:s,enumerable:!0,configurable:!0,writable:!0}):e[t]=s,e}function j(e){return function(t){var s=t.dispatch,i=t.getState;return function(t){return function(n){return"function"==typeof n?n(s,i,e):t(n)}}}}var F,x,V,G=j();G.withExtraArgument=j;class B{}B.fontSizeSmall=.75,B.fontSizeMedium=1.5,B.fontSizeLarge=2.5,B.movedEventString="-moved",B.titleIdString="-title",B.controllerString="-controller",B.nodeSizeRatio=50,B.splashBackSize=5,B.zoomFactor=2.5,B.minLoadingMS=500,B.topLayerRenderOrder=999,B.decimalPlaces=3,B.edgeSize=.005,B.maxAnimationSteps=50,B.minFrameMS=15,B.minTimeForThrottle=5*B.minFrameMS,B.nodeColors={selected:"#76ff03",hovered:"#f50057",normal:"#00b0ff"},B.edgeColors={selected:"#c0ff8c",hovered:"#ff89b3",normal:"#8cdbff"},B.colorValues={red:"#f50057",blue:"#00b0ff",black:"#000000",white:"#ffffff",yellow:"#ffeb3b",green:"#76ff03",lightRed:"#f77777"},B.lightValues={ambientLightColor:13684944,ambientLightIntensity:1,directionalLight1Color:16777215,directionalLight1Intensity:.75,directionalLight2Color:10584,directionalLight2Intensity:.5},B.cameraValues={near:.05,far:1e4,fov:45,maxPolarAngle:165,rotateSpeed:.5,zoomSpeed:1,dampingFactor:.25,minDistance:0};class U{static getFileExtension(e){return e.substring(e.lastIndexOf(".")+1)}static getGeometryCenter(e){let t;return(t=e instanceof THREE.BufferGeometry?(new THREE.Geometry).fromBufferGeometry(e):e).computeBoundingSphere(),t.boundingSphere.center}static getCameraStateFromMesh(e){let t,s,i;if(e){const n=e.geometry;return n.boundingSphere||n.computeBoundingSphere(),t=e.position,i=B.zoomFactor*n.boundingSphere.radius/Math.tan(B.cameraValues.fov*Math.PI/180),(s=new THREE.Vector3).copy(t),s.z+=i,{target:t,position:s}}return null}static getCameraStateFromNode(e,t){if(!e)return null;let s=new THREE.Vector3;s.copy(ue.stringToVector3(e.target));let i=new THREE.Vector3;i.copy(ue.stringToVector3(e.position));let n=i.clone().sub(s.clone()).normalize(),a=new THREE.Vector3;return a.copy(i),a.add(n.clone().multiplyScalar(t*B.zoomFactor)),{target:s,position:a}}}class ${static get Object(){return{schema:{src:{type:"model",default:""},dracoDecoderPath:{type:"string",default:""}},init(){this.model=null,this.loader=new THREE.GLTFLoader,THREE.DRACOLoader.setDecoderPath(this.data.dracoDecoderPath),this.loader.setDRACOLoader(new THREE.DRACOLoader)},update(){let e=this,t=this.el,s=this.data.src;s&&(this.remove(),this.loader.load(s,function(s){let i=Ee.setup(s);e.model=i.mesh,t.setObject3D("mesh",e.model),t.sceneEl.emit(z.LOADED,{format:"gltf",model:e.model},!1)},void 0,function(e){console.warn(e&&e.message?e.message:"Failed to load glTF model"),t.sceneEl.emit(z.ERROR,{format:"gltf",src:s},!1)}))},remove(){this.model&&this.el.removeObject3D("mesh")}}}static get Tag(){return"al-gltf-model"}}class z{}z.LOADED="al-model-loaded",z.ERROR="al-model-error";class q{constructor(){}load(e,t){return new Promise((s,i)=>{const n=new XMLHttpRequest;n.open("GET",e,!0),n.onload=(()=>{let e=JSON.parse(n.responseText);e=this._mapfiles(e.baseurl,e.series);const a=new AMI.VolumeLoader(t);a.load(e).then(()=>{const e=a.data[0].mergeSeries(a.data)[0].stack[0];a.free(),s(e)}).catch(e=>{console.log("Volume load error"),i(e)})}),n.onerror=(e=>{i(e)}),n.send()})}_mapfiles(e,t){return t.map(t=>(e.endsWith("/")||(e+="/"),`${e}${t}`))}}!function(e){e.NODE="node",e.EDGE="edge",e.ANGLE="angle"}(F||(F={})),function(e){e.GLTF="gltf",e.GLB="glb"}(x||(x={})),function(e){e.LOCK="LOCK",e.MESH="MESH"}(V||(V={}));class K{static get Object(){return{schema:{srcLoaded:{type:"boolean"},src:{type:"string"},displayMode:{type:"string"},slicesIndex:{type:"number"},slicesOrientation:{type:"string"},slicesWindowWidth:{type:"number"},slicesWindowCenter:{type:"number"},volumeSteps:{type:"number"},volumeWindowWidth:{type:"number"},volumeWindowCenter:{type:"number"}},bindMethods(){this.handleStack=this.handleStack.bind(this)},init(){this.tickFunction=AFRAME.utils.throttle(this.tickFunction,B.minFrameMS,this),this.loader=new q,this.state={},this.bindMethods()},handleStack(e){const s=this.state,i=this.el;switch(s.stack=e,this.data.displayMode){case t.SLICES:s.stackhelper=new AMI.StackHelper(s.stack),s.stackhelper.bbox.visible=!1,s.stackhelper.border.color=B.colorValues.blue;break;case t.VOLUME:{const e=i.sceneEl.parentEl.querySelector("#lut-canvases");s.lutHelper=new AMI.LutHelper(e),s.lutHelper.luts=AMI.LutHelper.presetLuts(),s.lutHelper.lutsO=AMI.LutHelper.presetLutsO(),s.stackhelper=new AMI.VolumeRenderingHelper(s.stack),s.stackhelper.uniforms.uTextureLUT.value=s.lutHelper.texture,s.stackhelper.uniforms.uLut.value=1;break}}i.sceneEl.emit(Q.LOADED,s.stackhelper,!1)},update(e){const t=this.state;this.data.src&&(e&&e.src!==this.data.src?this.loader.load(this.data.src,this.el).then(e=>{this.handleStack(e)}):e&&e.displayMode!==this.data.displayMode&&t.stack&&this.handleStack(t.stack))},tickFunction(){this.state.stackhelper&&this.el.setObject3D("mesh",this.state.stackhelper)},tick(){this.tickFunction()},remove(){this.el.removeObject3D("mesh")}}}static get Tag(){return"al-volume"}}class Q{}Q.LOADED="al-volume-loaded",Q.ERROR="al-volume-error";class X{static get Object(){return{schema:{target:{type:"vec3"},scale:{type:"number",default:1},selected:{type:"boolean"},graphEnabled:{type:"boolean"}},bindListeners(){this.pointerDown=this.pointerDown.bind(this),this.pointerUp=this.pointerUp.bind(this),this.pointerOver=this.pointerOver.bind(this),this.pointerOut=this.pointerOut.bind(this)},addListeners(){this.el.sceneEl.addEventListener("mousedown",this.pointerDown,{capture:!1,once:!1,passive:!0}),this.el.addEventListener("mouseup",this.pointerUp,{capture:!1,once:!1,passive:!0}),this.el.sceneEl.addEventListener("mouseup",this.pointerUp,{capture:!1,once:!1,passive:!0}),this.el.addEventListener("raycaster-intersected",this.pointerOver,{capture:!1,once:!1,passive:!0}),this.el.addEventListener("raycaster-intersected-cleared",this.pointerOut,{capture:!1,once:!1,passive:!0})},removeListeners(){this.el.sceneEl.removeEventListener("mousedown",this.pointerDown),this.el.sceneEl.removeEventListener("mouseup",this.pointerUp),this.el.removeEventListener("mouseup",this.pointerUp),this.el.removeEventListener("raycaster-intersected",this.pointerOver),this.el.removeEventListener("raycaster-intersected-cleared",this.pointerOut)},pointerDown(e){this.state.hovered&&(this.el.sceneEl.emit(J.SELECTED,{type:F.NODE,id:this.el.id},!0),this.data.graphEnabled)&&(this.state.mouseDown=!0,this.el.sceneEl.emit(J.POINTER_DOWN,{},!0))},pointerUp(e){let t=this.state;this.data.graphEnabled&&(t.dragging=!1,t.mouseDown=!1,this.el.sceneEl.emit(J.POINTER_UP,{},!0))},pointerOver(e){this.state.hovered=!0,this.el.sceneEl.emit(J.POINTER_OVER,{id:this.el.id},!0)},pointerOut(e){let t=this.state;t.hovered=!1,t.mouseDown&&t.selected&&(t.dragging=!0),this.el.sceneEl.emit(J.POINTER_OUT,{},!0)},init(){this.tickFunction=AFRAME.utils.throttle(this.tickFunction,B.minFrameMS,this),this.bindListeners(),this.addListeners();const e=this.data;let t=this.el;const s=t.sceneEl.camera.el.object3DMap.camera,i=new THREE.SphereGeometry(e.scale,16,16);let n=new THREE.MeshBasicMaterial;const a=new THREE.Mesh(i,n);let r=new THREE.SphereGeometry(e.scale,16,16),o=ge.getHaloMaterial();const d=new THREE.Mesh(r,o);a.add(d),t.setObject3D("mesh",a),t.object3D.renderOrder=998;let l=ue.objectToVector3(e.target);this.state={selected:!0,hovered:!1,geometry:i,material:n,mesh:a,outlineGeometry:r,outlineMaterial:o,outlineMesh:d,camera:s,target:l,dragging:!1}},update(){let e=this.state;e.target=this.data.target,e.selected=this.data.selected},tickFunction(){let e=this.state;this.data.graphEnabled&&e.dragging&&this.el.sceneEl.emit(J.DRAGGING,{id:this.el.id},!0),e.material.color=e.hovered||e.dragging?new THREE.Color(B.nodeColors.hovered):e.selected?new THREE.Color(B.nodeColors.selected):new THREE.Color(B.nodeColors.normal)},tick(){this.tickFunction()},remove(){this.removeListeners(),this.el.removeObject3D("mesh")}}}static get Tag(){return"al-node"}}class J{}J.SELECTED="al-graph-selected",J.POINTER_OVER="al-graph-pointer-over",J.POINTER_OUT="al-graph-pointer-out",J.DRAGGING="al-graph-dragging",J.POINTER_DOWN="al-graph-pointer-down",J.POINTER_UP="al-graph-pointer-up";class Y{static getEntryWithHighestId(e){return e.size?Math.max.apply(Math,[...e].map(([e])=>Number(e.split("-")[1]))):-1}static getNextId(e,t){return e+"-"+Number(this.getEntryWithHighestId(t)+1)}}class Z{static get Object(){return{schema:{graphEnabled:{type:"boolean"}},bindListeners(){this.canvasMouseDown=this.canvasMouseDown.bind(this),this.pointerOver=this.pointerOver.bind(this),this.pointerOut=this.pointerOut.bind(this),this.elClick=this.elClick.bind(this),this.canvasMouseUp=this.canvasMouseUp.bind(this),this.pointerDown=this.pointerDown.bind(this),this.pointerUp=this.pointerUp.bind(this)},addListeners(){this.el.sceneEl.canvas.addEventListener("mousedown",this.canvasMouseDown,{capture:!1,once:!1,passive:!0}),this.el.sceneEl.canvas.addEventListener("mouseup",this.canvasMouseUp,{capture:!1,once:!1,passive:!0}),this.el.addEventListener("raycaster-intersected",this.pointerOver,{capture:!1,once:!1,passive:!0}),this.el.addEventListener("raycaster-intersected-cleared",this.pointerOut,!1),this.el.addEventListener("click",this.elClick,{capture:!1,once:!1,passive:!0}),this.el.addEventListener("mousedown",this.pointerDown,{capture:!1,once:!1,passive:!0}),this.el.addEventListener("mouseup",this.pointerUp,{capture:!1,once:!1,passive:!0})},removeListeners(){this.el.sceneEl.canvas.removeEventListener("mousedown",this.canvasMouseDown),this.el.sceneEl.canvas.removeEventListener("mouseup",this.canvasMouseUp),this.el.removeEventListener("raycaster-intersected",this.pointerOver),this.el.removeEventListener("raycaster-intersected-cleared",this.pointerOut),this.el.removeEventListener("click",this.elClick),this.el.removeEventListener("mousedown",this.pointerDown),this.el.removeEventListener("mouseup",this.pointerUp)},canvasMouseDown(e){this.state.left=0===e.button},canvasMouseUp(e){ue.waitOneFrame(()=>{this.state.left=!1})},pointerOver(e){this.state.intersecting=!0,this.el.sceneEl.emit(ee.VALID_TARGET,{valid:!0},!1)},pointerOut(e){this.state.intersecting=!1,this.el.sceneEl.emit(ee.VALID_TARGET,{valid:!1},!1)},pointerDown(e){this.data.graphEnabled&&this.el.sceneEl.emit(J.POINTER_DOWN,{},!1)},pointerUp(e){this.data.graphEnabled&&this.el.sceneEl.emit(J.POINTER_UP,{},!1)},elClick(e){this.state.left&&this.data.graphEnabled&&this.el.sceneEl.emit(ee.ADD_NODE,e,!1)},init(){this.bindListeners(),this.addListeners(),this.state={left:!1,intersecting:!1}},remove(){this.removeListeners()}}}static get Tag(){return"al-node-spawner"}}class ee{}ee.VALID_TARGET="al-valid-target",ee.ADD_NODE="al-add-node";class te{static get Object(){return{dependencies:["camera"],schema:{autoRotate:{type:"boolean"},autoRotateSpeed:{default:2},controlPosition:{type:"vec3"},dampingFactor:{default:.1},enabled:{default:!0},enableDamping:{default:!0},enableKeys:{default:!0},enablePan:{default:!0},enableRotate:{default:!0},enableZoom:{default:!0},keyPanSpeed:{default:7},maxAzimuthAngle:{type:"number",default:1/0},maxDistance:{default:1e3},maxPolarAngle:{default:AFRAME.utils.device.isMobile()?90:120},minAzimuthAngle:{type:"number",default:-1/0},minDistance:{default:1},minPolarAngle:{default:0},rotateSpeed:{default:.05},screenSpacePanning:{default:!1},controlTarget:{type:"vec3"},zoomSpeed:{type:"number",default:.5},animating:{type:"boolean",default:!1}},bindListeners(){this.canvasMouseUp=this.canvasMouseUp.bind(this),this.canvasMouseDown=this.canvasMouseDown.bind(this),this.canvasWheel=this.canvasWheel.bind(this),this.emitNewSerial=this.emitNewSerial.bind(this),this.catchAnimationCache=this.catchAnimationCache.bind(this)},addListeners(){this.el.sceneEl.canvas.addEventListener("mouseup",this.canvasMouseUp,{capture:!1,once:!1,passive:!0}),this.el.sceneEl.canvas.addEventListener("mousedown",this.canvasMouseDown,{capture:!1,once:!1,passive:!0}),this.el.sceneEl.canvas.addEventListener("wheel",this.canvasWheel,{capture:!1,once:!1,passive:!0}),this.el.sceneEl.addEventListener(se.ANIMATION_STARTED,this.catchAnimationCache,!1)},removeListeners(){this.el.sceneEl.canvas.removeEventListener("mouseup",this.canvasMouseUp),this.el.sceneEl.canvas.removeEventListener("mousedown",this.canvasMouseDown),this.el.sceneEl.canvas.removeEventListener("wheel",this.canvasWheel),this.el.sceneEl.removeEventListener(se.ANIMATION_STARTED,this.catchAnimationCache,!1)},catchAnimationCache(e){this.state.animationCache=e.detail.slerpPath},emitNewSerial(){this.el.sceneEl.emit(se.UPDATED,{cameraSerial:{position:this.state.controls.object.position,target:this.state.controls.target}},!1)},canvasMouseUp(e){document.body.style.cursor="grab",this.state.controls.enabled&&this.emitNewSerial()},canvasMouseDown(e){document.body.style.cursor="grabbing"},canvasWheel(e){this.emitNewSerial()},init(){let e=this.el,t=this.data;document.body.style.cursor="grab",this.tickFunction=AFRAME.utils.throttle(this.tickFunction,B.minFrameMS,this);let s=new THREE.OrbitControls(e.getObject3D("camera"),e.sceneEl.renderer.domElement),i=ue.objectToVector3(t.controlPosition),n=ue.objectToVector3(t.controlTarget);s.object.position.copy(i),e.getObject3D("camera").position.copy(i),s.target.copy(n),this.state={controls:s,animationCache:[]},this.bindListeners(),this.addListeners(),ue.waitOneFrame(()=>{this.emitNewSerial()})},update(e){let t=this.state.controls;const s=this.data;t.target=ue.objectToVector3(s.controlTarget),t.autoRotate=s.autoRotate,t.autoRotateSpeed=s.autoRotateSpeed,t.dampingFactor=s.dampingFactor,t.enabled=s.enabled,t.enableDamping=s.enableDamping,t.enableKeys=s.enableKeys,t.enablePan=s.enablePan,t.enableRotate=s.enableRotate,t.enableZoom=s.enableZoom,t.keyPanSpeed=s.keyPanSpeed,t.maxPolarAngle=THREE.Math.degToRad(s.maxPolarAngle),t.maxAzimuthAngle=THREE.Math.degToRad(s.maxAzimuthAngle),t.maxDistance=s.maxDistance,t.minDistance=s.minDistance,t.minPolarAngle=THREE.Math.degToRad(s.minPolarAngle),t.minAzimuthAngle=THREE.Math.degToRad(s.minAzimuthAngle),t.rotateSpeed=s.rotateSpeed,t.screenSpacePanning=s.screenSpacePanning,t.zoomSpeed=s.zoomSpeed,this.el.getObject3D("camera").position.copy(ue.objectToVector3(s.controlPosition))},tickFunction(){let e=this.state.controls;if(e.enabled){if(this.data.animating){let t=this.state.animationCache.shift();t&&t.position&&t.target&&(e.object.position.copy(t.position),this.el.getObject3D("camera").position.copy(t.position),e.target.copy(t.target)),0===this.state.animationCache.length&&this.el.sceneEl.emit(se.ANIMATION_FINISHED,{},!1)}e.enabled&&(e.enableDamping||e.autoRotate)&&e.update()}},tick(){this.tickFunction()},remove(){this.removeListeners();let e=this.state;e.controls.dispose(),e=null}}}static get Tag(){return"al-orbit-control"}}class se{}se.UPDATED="al-orbit-controls-updated",se.ANIMATION_STARTED="al-orbit-controls-animation-started",se.ANIMATION_FINISHED="al-orbit-controls-animation-finished";class ie{static get Object(){return{schema:{detail:{default:0,min:0,max:5,type:"int"},radius:{default:1,min:0}},init(e){this.geometry=new THREE.TetrahedronGeometry(e.radius,e.detail),this.geometry.applyMatrix((new THREE.Matrix4).makeRotationAxis(new THREE.Vector3(1,0,-1).normalize(),Math.atan(Math.sqrt(2))))}}}static get Tag(){return"al-spinner"}}class ne{static get Object(){return{schema:{distanceFromTarget:{type:"number",default:.1},target:{type:"vec3"}},init(e){if(this.tickFunction=AFRAME.utils.throttle(this.tickFunction,B.minFrameMS/2,this),this.data.target){let e=ue.objectToVector3(this.data.target);this.state={distanceFromTarget:this.data.distanceFromTarget,target:e}}else this.state={distanceFromTarget:this.data.distanceFromTarget,target:new THREE.Vector3(0,0,0)}},update(e){let t=ue.objectToVector3(this.data.target);this.state={distanceFromTarget:this.data.distanceFromTarget,target:t}},tickFunction(){let e=this.el,t=this.state;const s=e.sceneEl.camera.position,i=t.target.clone().sub(s.clone()).normalize();e.object3D.position.copy(i.multiplyScalar(t.distanceFromTarget)),e.object3D.lookAt(s)},tick(){this.tickFunction()}}}static get Tag(){return"al-fixed-to-orbit-camera"}}class ae{static get Object(){return{schema:{},init(){this.tickFunction=AFRAME.utils.throttle(this.tickFunction,B.minFrameMS,this)},tickFunction(){this.el.object3D.lookAt(this.el.sceneEl.camera.position)},tick(){this.tickFunction()}}}static get Tag(){return"al-look-to-camera"}}class re{static get Object(){return{schema:{},init(e){this.el.object3DMap.mesh.renderOrder=999}}}static get Tag(){return"al-render-overlaid"}}class oe{static get Object(){return{schema:{},init(e){let t=this.el.object3DMap.text;t.renderOrder=999,t.material.depthTest=!1}}}static get Tag(){return"al-render-overlaid-text"}}class de{static get Object(){return{schema:{},init(e){let t=this.el.object3DMap.line;t.material.depthTest=!1,t.material.color=new THREE.Color(B.colorValues.blue)}}}static get Tag(){return"al-render-overlaid-line"}}class le{static get Object(){return{schema:{order:{type:"number",default:B.topLayerRenderOrder}},init(e){Object.keys(this.el.object3DMap).forEach(e=>{this.el.object3DMap[e].renderOrder=this.data.order})},update(){Object.keys(this.el.object3DMap).forEach(e=>{this.el.object3DMap[e].renderOrder=this.data.order})}}}static get Tag(){return"al-render-order"}}class ce{static get Object(){return{schema:{selected:{type:"boolean"},node1:{type:"vec3"},node2:{type:"vec3"},length:{type:"number"},radius:{type:"number"},nodeScale:{type:"number"}},bindListeners(){this.pointerDown=this.pointerDown.bind(this),this.pointerOver=this.pointerOver.bind(this),this.pointerOut=this.pointerOut.bind(this),this.createMesh=this.createMesh.bind(this)},addListeners(){this.el.sceneEl.addEventListener("mousedown",this.pointerDown,{capture:!1,once:!1,passive:!0}),this.el.addEventListener("raycaster-intersected",this.pointerOver,{capture:!1,once:!1,passive:!0}),this.el.addEventListener("raycaster-intersected-cleared",this.pointerOut,{capture:!1,once:!1,passive:!0})},removeListeners(){this.el.sceneEl.removeEventListener("mousedown",this.pointerDown),this.el.removeEventListener("raycaster-intersected",this.pointerOver),this.el.removeEventListener("raycaster-intersected-cleared",this.pointerOut)},pointerDown(e){this.state.hovered&&this.el.sceneEl.emit(J.SELECTED,{type:F.EDGE,id:this.el.id},!1)},pointerOver(e){this.state.hovered=!0,this.el.sceneEl.emit(J.POINTER_OVER,{id:this.el.id},!1)},pointerOut(e){this.state.hovered=!1,this.el.sceneEl.emit(J.POINTER_OUT,{},!1)},createMesh(){const e=ue.objectToVector3(this.data.node1),t=ue.objectToVector3(this.data.node2);var s=new THREE.Matrix4;s.lookAt(e,t,(new THREE.Object3D).up),s.multiply((new THREE.Matrix4).set(1,0,0,0,0,0,1,0,0,-1,0,0,0,0,0,1));let i=new THREE.CylinderGeometry(this.data.radius,this.data.radius,this.data.length,6,4),n=new THREE.MeshBasicMaterial;const a=new THREE.Mesh(i,n);a.applyMatrix(s),this.state.geometry=i,this.state.material=n,this.state.mesh=a;let r=new THREE.CylinderGeometry(this.data.radius,this.data.radius,this.data.length-2*this.data.nodeScale,6,4),o=ge.getHaloMaterial();const d=new THREE.Mesh(r,o);this.state.outlineGeometry=r,this.state.outlineMaterialt=o,this.state.outlineMesh=d,a.add(d),this.el.setObject3D("mesh",a),this.el.object3D.renderOrder=997},init(){this.tickFunction=AFRAME.utils.throttle(this.tickFunction,B.minFrameMS,this),this.bindListeners(),this.addListeners(),this.state={selected:!0,hovered:!1}},update(e){this.state.selected=this.data.selected,!e||e.radius===this.data.radius&&e.length===this.data.length||this.createMesh()},tickFunction(){let e=this.state;e.material.color=e.hovered?new THREE.Color(B.nodeColors.hovered):e.selected?new THREE.Color(B.nodeColors.selected):new THREE.Color(B.nodeColors.normal)},tick(){this.tickFunction()},remove(){this.removeListeners(),this.el.removeObject3D("mesh")}}}static get Tag(){return"al-edge"}}class he{static get Object(){return{schema:{selected:{type:"boolean"},edge0Pos:{type:"vec3"},edge1Pos:{type:"vec3"},position:{type:"vec3"},length:{type:"number"},radius:{type:"number"},angle:{type:"number"}},bindListeners(){this.pointerDown=this.pointerDown.bind(this),this.pointerOver=this.pointerOver.bind(this),this.pointerOut=this.pointerOut.bind(this),this.createMesh=this.createMesh.bind(this)},addListeners(){this.el.addEventListener("mousedown",this.pointerDown,{capture:!1,once:!1,passive:!0}),this.el.addEventListener("raycaster-intersected",this.pointerOver,{capture:!1,once:!1,passive:!0}),this.el.addEventListener("raycaster-intersected-cleared",this.pointerOut,{capture:!1,once:!1,passive:!0})},removeListeners(){this.el.removeEventListener("mousedown",this.pointerDown),this.el.removeEventListener("raycaster-intersected",this.pointerOver),this.el.removeEventListener("raycaster-intersected-cleared",this.pointerOut)},pointerDown(e){this.el.sceneEl.emit(J.SELECTED,{type:F.ANGLE,id:this.el.id},!0)},pointerOver(e){this.state.hovered=!0,this.el.sceneEl.emit(J.POINTER_OVER,{id:this.el.id},!0)},pointerOut(e){this.state.hovered=!1,this.el.sceneEl.emit(J.POINTER_OUT,{},!0)},createMesh(){const e=ue.objectToVector3(this.data.edge0Pos),t=ue.objectToVector3(this.data.edge1Pos);var s=new THREE.Matrix4;s.lookAt(e,t,(new THREE.Object3D).up),s.multiply((new THREE.Matrix4).set(1,0,0,0,0,0,1,0,0,-1,0,0,0,0,0,1));let i=new THREE.CylinderGeometry(this.data.radius,this.data.radius,this.data.length,6,4),n=new THREE.MeshBasicMaterial;const a=new THREE.Mesh(i,n);a.applyMatrix(s),a.position.copy(ue.objectToVector3(this.data.position)),this.state.geometry=i,this.state.material=n,this.state.mesh=a;let r=new THREE.CylinderGeometry(this.data.radius,this.data.radius,this.data.length,6,4),o=ge.getHaloMaterial();const d=new THREE.Mesh(r,o);this.state.outlineGeometry=r,this.state.outlineMaterialt=o,this.state.outlineMesh=d,a.add(d),this.el.setObject3D("mesh",a),this.el.object3D.renderOrder=996},init(){this.tickFunction=AFRAME.utils.throttle(this.tickFunction,B.minFrameMS,this),this.bindListeners(),this.addListeners(),this.state={selected:!0,hovered:!1},this.createMesh()},update(e){this.state.selected=this.data.selected,e&&e.angle!==this.data.angle&&this.createMesh()},tickFunction(){let e=this.state;e.material.color=e.hovered?new THREE.Color(B.nodeColors.hovered):e.selected?new THREE.Color(B.nodeColors.selected):new THREE.Color(B.nodeColors.normal)},tick(){this.tickFunction()},remove(){this.removeListeners(),this.el.removeObject3D("mesh")}}}static get Tag(){return"al-angle"}}class pe{static geometryExists(e){return!!AFRAME.geometries[e]}static componentExists(e){return!!AFRAME.components[e]}static registerGeometry(e,t){this.geometryExists(e)||AFRAME.registerGeometry(e,t)}static registerComponent(e,t){this.componentExists(e)||AFRAME.registerComponent(e,t)}static createAframeComponents(){this.registerGeometry(ie.Tag,ie.Object),this.registerComponent($.Tag,$.Object),this.registerComponent(K.Tag,K.Object),this.registerComponent(X.Tag,X.Object),this.registerComponent(Z.Tag,Z.Object),this.registerComponent(te.Tag,te.Object),this.registerComponent(ne.Tag,ne.Object),this.registerComponent(ae.Tag,ae.Object),this.registerComponent(re.Tag,re.Object),this.registerComponent(oe.Tag,oe.Object),this.registerComponent(de.Tag,de.Object),this.registerComponent(le.Tag,le.Object),this.registerComponent(ce.Tag,ce.Object),this.registerComponent(he.Tag,he.Object)}}class ue{static enableCamera(e,t){e.setAttribute("al-orbit-control",`enabled: ${t}`)}static waitOneFrame(e){window.setTimeout(()=>{e()},B.minFrameMS)}static objectToVector3(e){let t=new THREE.Vector3;return t.x=e.x,t.y=e.y,t.z=e.z,t}static worldToScreen(e,t,s){const i=e.clone();return i.project(t),i.x=Math.round((i.x+1)*s.offsetWidth/2),i.y=Math.round((1-i.y)*s.offsetHeight/2),i.z=0,i}static vector3ToString(e){return e.toArray().join(" ")}static stringToVector3(e){let t=e.split(" "),s=new THREE.Vector3;return s.x=Number(t[0]),s.y=Number(t[1]),s.z=Number(t[2]),s}static slerp(e,t,s){const i=s,n=e,a=t;let r=n.angleTo(a);if(r){r=THREE.Math.clamp(r,-.99,.99);const e=Math.sin(1-i)*r,t=Math.sin(i*r),s=Math.sin(r),o=e/s,d=t/s,l=n.clone().multiplyScalar(o),c=a.clone().multiplyScalar(d);return l.add(c)}return null}static easeInOutCubic(e){return e<.5?4*e*e*e:(e-1)*(2*e-2)*(2*e-2)+1}static getSlerpPath(e,t,s,i){let n=[];for(let a=1;a<=B.maxAnimationSteps;a++){let r=this.easeInOutCubic(a/B.maxAnimationSteps);n.push({position:s?ue.slerp(e.position.clone(),t.position.clone(),r):t.position,target:i?ue.slerp(e.target.clone(),t.target.clone(),r):t.target})}return n}}class Ee{static setup(e){const t=e.scene||e.scenes[0];let s;t instanceof THREE.Mesh?s=t:t.children.forEach(e=>{e instanceof THREE.Mesh&&(s=e)});let i=s.geometry;i instanceof THREE.BufferGeometry&&(i=(new THREE.Geometry).fromBufferGeometry(s.geometry));let n=i.vertices.reduce((e,t)=>new THREE.Vector3(Math.min(e.length(),t.length()),0,0)).x;return{mesh:s,maxDist:n}}}class ge{static getHaloMaterial(e=.5,t=.5,s=.5,i=.1,n=.5){return new THREE.ShaderMaterial({uniforms:{r:{value:e},g:{value:t},b:{value:s},a:{value:i},c:{value:n}},vertexShader:this.haloVertex,fragmentShader:this.haloFragment,side:THREE.BackSide,blending:THREE.AdditiveBlending,transparent:!0,depthTest:!1})}}ge.haloVertex="\n    varying vec3 vNormal;\n\n    void main()\n    {\n        vNormal = normalize( normalMatrix * normal );\n        gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n    }\n  ",ge.haloFragment="\n    varying vec3 vNormal;\n    uniform float r;\n    uniform float g;\n    uniform float b;\n    uniform float a;\n    uniform float c;\n\n    void main()\n    {\n        float intensity = pow( c - dot( vNormal, vec3( 0.0, 0.0, 1.0 ) ), 4.0 );\n        gl_FragColor = vec4(r, g, b, a) * intensity;\n    }\n  ";const me=function(e){for(var t=Object.keys(e),s={},i=0;i<t.length;i++){var n=t[i];"function"==typeof e[n]&&(s[n]=e[n])}var a,r=Object.keys(s);try{!function(e){Object.keys(e).forEach(function(t){var s=e[t];if(void 0===s(void 0,{type:R.INIT}))throw new Error('Reducer "'+t+"\" returned undefined during initialization. If the state passed to the reducer is undefined, you must explicitly return the initial state. The initial state may not be undefined. If you don't want to set a value for this reducer, you can use null instead of undefined.");if(void 0===s(void 0,{type:R.PROBE_UNKNOWN_ACTION()}))throw new Error('Reducer "'+t+"\" returned undefined when probed with a random type. Don't try to handle "+R.INIT+' or other actions in "redux/*" namespace. They are considered private. Instead, you must return the current state for any unknown actions, unless it is undefined, in which case you must return the initial state, regardless of the action type. The initial state may not be undefined, but can be null.')})}(s)}catch(e){a=e}return function(e,t){if(void 0===e&&(e={}),a)throw a;for(var i=!1,n={},o=0;o<r.length;o++){var d=r[o],l=e[d],c=(0,s[d])(l,t);if(void 0===c){var h=H(d,t);throw new Error(h)}n[d]=c,i=i||c!==l}return i?n:e}}({app:(e=(()=>({angles:new Map,boundingBoxVisible:!1,camera:null,controlsEnabled:!0,displayMode:t.MESH,edges:new Map,nodes:new Map,graphEnabled:!1,orientation:s.CORONAL,selected:null,slicesIndex:0,slicesWindowCenter:0,slicesWindowWidth:0,src:null,srcLoaded:!1,volumeSteps:8,volumeWindowCenter:0,volumeWindowWidth:0}))(),i)=>{switch(i.type){case a.APP_SET_SRC:{let s=t.MESH;if(i.payload){const e=U.getFileExtension(i.payload);Object.values(x).includes(e)||(s=t.SLICES)}return Object.assign({},e,{src:i.payload,srcLoaded:!1,displayMode:s,selected:null,nodes:new Map,edges:new Map,angles:new Map})}case a.APP_SET_SRC_LOADED:return Object.assign({},e,{srcLoaded:i.payload});case a.APP_SET_NODE:{const[t,s]=i.payload,n=JSON.parse(JSON.stringify(s)),a=e.nodes.get(t);let r=Object.assign({},a,n);return Object.assign({},e,{selected:a?e.selected:t,nodes:new Map(e.nodes).set(t,r)})}case a.APP_DELETE_NODE:return Object.assign({},e,{selected:e.selected===i.payload?null:e.selected,nodes:new Map([...e.nodes].filter(([e])=>e!==i.payload)),edges:new Map([...e.edges].filter(([e,t])=>i.payload!==t.node1Id&&i.payload!==t.node2Id))});case a.APP_SELECT_NODE:return Object.assign({},e,{selected:i.payload});case a.APP_CLEAR_NODES:return Object.assign({},e,{nodes:new Map});case a.APP_SET_EDGE:{const[t,s]=i.payload,n=JSON.parse(JSON.stringify(s)),a=e.edges.get(t);let r=Object.assign({},a,n);return Object.assign({},e,{selected:a?e.selected:t,edges:new Map(e.edges).set(t,r)})}case a.APP_DELETE_EDGE:return Object.assign({},e,{selected:e.selected===i.payload?null:e.selected,edges:new Map([...e.edges].filter(([e])=>e!==i.payload)),angles:new Map([...e.angles].filter(([e,t])=>i.payload!==t.edge1Id&&i.payload!==t.edge2Id))});case a.APP_SELECT_EDGE:return Object.assign({},e,{selected:i.payload});case a.APP_CLEAR_EDGES:return Object.assign({},e,{edges:new Map});case a.APP_SET_ANGLE:{const[t,s]=i.payload,n=JSON.parse(JSON.stringify(s)),a=e.angles.get(t);let r=Object.assign({},a,n);return Object.assign({},e,{selected:a?e.selected:t,angles:new Map(e.angles).set(t,r)})}case a.APP_DELETE_ANGLE:return Object.assign({},e,{selected:e.selected===i.payload?null:e.selected,angles:new Map([...e.angles].filter(([e])=>e!==i.payload))});case a.APP_SELECT_ANGLE:return Object.assign({},e,{selected:i.payload});case a.APP_CLEAR_ANGLES:return Object.assign({},e,{angles:new Map});case a.APP_SET_DISPLAY_MODE:return Object.assign({},e,{boundingBoxVisible:i.payload===t.SLICES,displayMode:i.payload});case a.APP_SET_ORIENTATION:return Object.assign({},e,{slicesIndex:void 0,orientation:i.payload});case a.APP_SET_NODES_ENABLED:return Object.assign({},e,{graphEnabled:i.payload});case a.APP_SET_BOUNDINGBOX_VISIBLE:return Object.assign({},e,{boundingBoxVisible:i.payload});case a.APP_SET_SLICES_INDEX:return Object.assign({},e,{slicesIndex:i.payload});case a.APP_SET_SLICES_WINDOW_WIDTH:return Object.assign({},e,{slicesWindowWidth:i.payload});case a.APP_SET_SLICES_WINDOW_CENTER:return Object.assign({},e,{slicesWindowCenter:i.payload});case a.APP_SET_VOLUME_STEPS:return Object.assign({},e,{volumeSteps:i.payload});case a.APP_SET_VOLUME_WINDOW_WIDTH:return Object.assign({},e,{volumeWindowWidth:i.payload});case a.APP_SET_VOLUME_WINDOW_CENTER:return Object.assign({},e,{volumeWindowCenter:i.payload});case a.APP_SET_CAMERA:return Object.assign({},e,{camera:Object.assign({},e.camera,i.payload)});case a.APP_SET_CONTROLS_ENABLED:return Object.assign({},e,{controlsEnabled:i.payload})}return e}}),_e=e=>k(me,e,function(){for(var e=arguments.length,t=new Array(e),s=0;s<e;s++)t[s]=arguments[s];return function(e){return function(){var s=e.apply(void 0,arguments),i=function(){throw new Error("Dispatching while constructing your middleware is not allowed. Other middleware would not be applied to this dispatch.")},n={getState:s.getState,dispatch:function(){return i.apply(void 0,arguments)}},a=t.map(function(e){return e(n)});return function(e){for(var t=1;t<arguments.length;t++){var s=null!=arguments[t]?arguments[t]:{},i=Object.keys(s);"function"==typeof Object.getOwnPropertySymbols&&(i=i.concat(Object.getOwnPropertySymbols(s).filter(function(e){return Object.getOwnPropertyDescriptor(s,e).enumerable}))),i.forEach(function(t){W(e,t,s[t])})}return e}({},s,{dispatch:i=function(){for(var e=arguments.length,t=new Array(e),s=0;s<e;s++)t[s]=arguments[s];return 0===t.length?function(e){return e}:1===t.length?t[0]:t.reduce(function(e,t){return function(){return e(t.apply(void 0,arguments))}})}.apply(void 0,a)(s.dispatch)})}}}(G));class Se{constructor(){this._backboardVisible=!1,this._graphIntersection=null,this._isShiftDown=!1,this.width="640px",this.height="480px",this.debug=!1,this.spinnerColor="#fff"}async load(e){this.src?(this._setSrc(null),setTimeout(()=>{this._setSrc(e)},B.minLoadingMS)):this._setSrc(e)}resize(){if(this.srcLoaded){const e=this._scene.sceneEl.camera,t=this._scene.sceneEl.renderer;e.aspect=this._container.offsetWidth/this._container.offsetHeight,e.updateProjectionMatrix(),t.setSize(this._container.offsetWidth,this._container.offsetHeight)}}async setNode(e){this._setNode(e)}async setGraph(e){this._setGraph(e)}async deleteNode(e){this._deleteNode(e)}async clearGraph(){this._clearGraph()}async selectNode(e){this._selectNode(e,!0)}async deleteEdge(e){this._deleteEdge(e)}async deleteAngle(e){this._deleteAngle(e)}async setEdge(e){this._setEdge(e)}async setDisplayMode(e){this._setDisplayMode(e)}async setGraphEnabled(e){this._setGraphEnabled(e)}async setBoundingBoxVisible(e){this._setBoundingBoxVisible(e)}async setSlicesIndex(e){this._setSlicesIndex(e)}async setOrientation(e){this._setOrientation(e)}async setSlicesWindowCenter(e){this._setSlicesWindowCenter(e)}async setSlicesWindowWidth(e){this._setSlicesWindowWidth(e)}async setVolumeSteps(e){this._setVolumeSteps(e)}async setVolumeWindowCenter(e){this._setVolumeWindowCenter(e)}async setVolumeWindowWidth(e){this._setVolumeWindowWidth(e)}componentWillLoad(){pe.createAframeComponents(),this.store.setStore(_e({})),this.store.mapStateToProps(this,e=>{const{app:{angles:t,boundingBoxVisible:s,camera:i,controlsEnabled:n,displayMode:a,edges:r,graphEnabled:o,nodes:d,orientation:l,selected:c,slicesIndex:h,slicesWindowCenter:p,slicesWindowWidth:u,src:E,srcLoaded:g,volumeSteps:m,volumeWindowCenter:_,volumeWindowWidth:S}}=e;return{angles:t,boundingBoxVisible:s,camera:i,controlsEnabled:n,displayMode:a,edges:r,graphEnabled:o,nodes:d,orientation:l,selected:c,slicesIndex:h,slicesWindowCenter:p,slicesWindowWidth:u,src:E,srcLoaded:g,volumeSteps:m,volumeWindowCenter:_,volumeWindowWidth:S}}),this.store.mapDispatchToProps(this,{appClearAngles:b,appClearEdges:g,appClearNodes:h,appDeleteAngle:_,appDeleteEdge:u,appDeleteNode:l,appSelectAngle:S,appSelectEdge:E,appSelectNode:c,appSetAngle:m,appSetBoundingBoxVisible:T,appSetCamera:N,appSetControlsEnabled:I,appSetDisplayMode:y,appSetEdge:p,appSetGraphEnabled:v,appSetNode:d,appSetOrientation:f,appSetSlicesIndex:A,appSetSlicesWindowCenter:w,appSetSlicesWindowWidth:O,appSetSrc:r,appSetSrcLoaded:o,appSetVolumeSteps:P,appSetVolumeWindowCenter:L,appSetVolumeWindowWidth:D}),this._animationFinished=this._animationFinished.bind(this),this._keyDownHandler=this._keyDownHandler.bind(this),this._keyUpHandler=this._keyUpHandler.bind(this),this._controlsDisabledHandler=this._controlsDisabledHandler.bind(this),this._controlsEnabledHandler=this._controlsEnabledHandler.bind(this),this._controlsUpdatedHandler=this._controlsUpdatedHandler.bind(this),this._intersectingGraphHandler=this._intersectingGraphHandler.bind(this),this._intersectionGraphClearedHandler=this._intersectionGraphClearedHandler.bind(this),this._nodeMovedEventHandler=this._nodeMovedEventHandler.bind(this),this._graphSelectedHandler=this._graphSelectedHandler.bind(this),this._spawnNodeEventHandler=this._spawnNodeEventHandler.bind(this),this._srcLoaded=this._srcLoaded.bind(this),this._validTargetEventHandler=this._validTargetEventHandler.bind(this)}_renderSpinner(){return this.srcLoaded?null:e("a-entity",{"al-fixed-to-orbit-camera":`\n          distanceFromTarget: 20;\n          target: ${this.camera?this.camera.position:new THREE.Vector3(0,0,0)};\n        `},e("a-entity",{animation:"property: rotation; to: 0 120 0; loop: true; dur: 1000; easing: easeInOutQuad",geometry:"primitive: al-spinner;",material:`color: ${this.spinnerColor};`}))}_renderSrc(){if(!this.src)return null;let s=0,i=null;switch(this._boundingSphereRadius&&(i=e("a-entity",{class:"collidable",id:"back-board",geometry:`primitive: plane; height: ${s=this._boundingSphereRadius*B.splashBackSize}; width: ${s}`,"al-fixed-to-orbit-camera":`\n          distanceFromTarget: ${this._boundingSphereRadius};\n          target: ${this.camera?this.camera.target:new THREE.Vector3(0,0,0)};\n        `,material:`\n          wireframe: ${this._backboardVisible};\n          transparent: true;\n          opacity: ${this._backboardVisible?"1.0":"0.0"};\n          side: double;\n        `,ref:e=>this._backboard=e})),this.displayMode){case t.MESH:return[e("a-entity",{"al-node-spawner":`\n              graphEnabled: ${this.graphEnabled};\n            `,class:"collidable",id:"target-entity","al-gltf-model":`\n              src: url(${this.src});\n              dracoDecoderPath: ${this.dracoDecoderPath};\n            `,position:"0 0 0",scale:"1 1 1",ref:e=>this._targetEntity=e}),i];case t.SLICES:case t.VOLUME:return[e("a-entity",{"al-node-spawner":`\n              graphEnabled: ${this.graphEnabled};\n            `,class:"collidable",id:"target-entity","al-volume":`\n              srcLoaded: ${this.srcLoaded};\n              src: ${this.src};\n              displayMode: ${this.displayMode};\n              slicesIndex: ${this.slicesIndex};\n              slicesOrientation: ${this.orientation};\n              slicesWindowWidth: ${this.slicesWindowWidth};\n              slicesWindowCenter: ${this.slicesWindowCenter};\n              volumeSteps: ${this.volumeSteps};\n              volumeWindowCenter: ${this.volumeWindowCenter};\n              volumeWindowWidth: ${this.volumeWindowWidth};\n            `,position:"0 0 0",scale:"1 1 1",ref:e=>this._targetEntity=e}),i]}}_renderNodes(){return[...this.nodes].map(t=>{const[s,i]=t;let n=new THREE.Vector3(0,2.5,0);return n.multiplyScalar(i.scale),e("a-entity",{class:"collidable",id:s,position:i.position,"al-node":`\n            target: ${i.target};\n            scale: ${i.scale};\n            selected: ${this.selected===s};\n            graphEnabled: ${this.graphEnabled};\n          `},e("a-entity",{text:`\n              value: ${i.text};\n              side: double;\n              align: center;\n              baseline: bottom;\n              anchor: center;\n              width: ${B.fontSizeMedium*this._boundingSphereRadius}\n            `,"al-look-to-camera":!0,"al-render-overlaid-text":!0,visible:`${this.selected===s}`,position:ue.vector3ToString(n),id:`${s}-label`}))})}_renderEdges(){return[...this.edges].map(t=>{const[s,i]=t,n=this.nodes.get(i.node1Id),a=this.nodes.get(i.node2Id);if(n&&a){const t=ue.stringToVector3(n.position);let i=ue.stringToVector3(a.position).clone().sub(t),r=i.length();i=i.normalize().multiplyScalar(.5*r);let o=t.clone().add(i),d=new THREE.Vector3(0,2.5,0),l=(n.scale+a.scale)/2,c=this._boundingSphereRadius*B.edgeSize;return d.multiplyScalar(l),e("a-entity",{class:"collidable",id:s,position:ue.vector3ToString(o),"al-edge":`\n              length: ${r};\n              node1: ${n.position};\n              node2: ${a.position};\n              selected: ${this.selected===s};\n              radius: ${c};\n              nodeScale: ${l};\n            `},e("a-entity",{id:`${s}-title`,text:`\n                value: ${r.toFixed(B.decimalPlaces)+" m"};\n                side: double;\n                align: center;\n                baseline: bottom;\n                anchor: center;\n                width: ${B.fontSizeSmall*this._boundingSphereRadius}\n              `,position:ue.vector3ToString(d),visible:`${this.selected===s}`,"al-look-to-camera":!0,"al-render-overlaid-text":!0}))}})}_renderAngles(){return[...this.angles].map(t=>{const[s,i]=t,n=this.edges.get(i.edge1Id),a=this.edges.get(i.edge2Id);if(n&&a){let t,i,r,o=this._boundingSphereRadius*B.edgeSize;n.node1Id===a.node1Id?(t=this.nodes.get(a.node1Id),i=this.nodes.get(n.node2Id),r=this.nodes.get(a.node2Id)):n.node1Id===a.node2Id?(t=this.nodes.get(a.node2Id),i=this.nodes.get(n.node2Id),r=this.nodes.get(a.node1Id)):n.node2Id===a.node1Id?(t=this.nodes.get(a.node1Id),i=this.nodes.get(n.node1Id),r=this.nodes.get(a.node2Id)):n.node2Id===a.node2Id&&(t=this.nodes.get(a.node2Id),i=this.nodes.get(n.node1Id),r=this.nodes.get(a.node1Id));const d=ue.stringToVector3(i.position),l=ue.stringToVector3(r.position),c=ue.stringToVector3(t.position);let h=d.clone().sub(c).normalize(),p=l.clone().sub(c).normalize(),u=p.angleTo(h),E=h.clone().multiplyScalar(25*o),g=p.clone().multiplyScalar(25*o),m=E.clone().distanceTo(g.clone()),_=E.clone().add(g.clone()).divideScalar(2),S=new THREE.Vector3(0,2.5,0);return S.multiplyScalar((i.scale+r.scale+t.scale)/3),e("a-entity",{class:"collidable",id:s,position:t.position,"al-angle":`\n              selected: ${this.selected===s};\n              edge0Pos: ${ue.vector3ToString(E)};\n              edge1Pos: ${ue.vector3ToString(g)};\n              position: ${ue.vector3ToString(_)};\n              length: ${m};\n              radius: ${o};\n              angle: ${u};\n            `},e("a-entity",{id:`${s}-title`,text:`\n                value: ${THREE.Math.radToDeg(u).toFixed(B.decimalPlaces)+" deg"};\n                side: double;\n                align: center;\n                baseline: bottom;\n                anchor: center;\n                width: ${B.fontSizeSmall*this._boundingSphereRadius}\n              `,position:ue.vector3ToString(_.clone().add(S)),visible:`${this.selected===s}`,"al-look-to-camera":!0,"al-render-overlaid-text":!0}))}})}_renderLights(){return[e("a-entity",{id:"light-1",light:"type: directional; color: #ffffff; intensity: 0.75",position:"1 1 1"}),e("a-entity",{id:"light-2",light:"type: directional; color: #002958; intensity: 0.5",position:"-1 -1 -1"}),e("a-entity",{id:"light-3",light:"type: ambient; color: #d0d0d0; intensity: 1"})]}_renderCamera(){return e("a-camera",{fov:B.cameraValues.fov,near:B.cameraValues.near,"look-controls":"enabled: false",far:B.cameraValues.far,id:"mainCamera",cursor:"rayOrigin: mouse",raycaster:"objects: .collidable","al-orbit-control":`\n          maxPolarAngle: ${B.cameraValues.maxPolarAngle};\n          minDistance: ${B.cameraValues.minDistance};\n          screenSpacePanning: true;\n          rotateSpeed: ${B.cameraValues.rotateSpeed};\n          zoomSpeed: ${B.cameraValues.zoomSpeed};\n          enableDamping: true;\n          dampingFactor: ${B.cameraValues.dampingFactor};\n          controlTarget: ${ue.vector3ToString(this.camera?this.camera.target:new THREE.Vector3(0,0,0))};\n          controlPosition: ${ue.vector3ToString(this.camera?this.camera.position:new THREE.Vector3(0,0,0))};\n          enabled: ${this.controlsEnabled};\n          animating: ${!(!this.camera||!this.camera.animating)&&this.camera.animating}\n        `,ref:e=>this._camera=e},this._renderSpinner())}_renderScene(){return e("a-scene",{embedded:!0,renderer:"colorManagement: true; sortObjects: true;","vr-mode-ui":"enabled: false",ref:e=>this._scene=e},this._renderSrc(),this._renderNodes(),this._renderEdges(),this._renderAngles(),this._renderLights(),this._renderCamera())}render(){return e("div",{id:"al-container",style:{width:this.width,height:this.height},ref:e=>this._container=e},e("div",{id:"lut-container"},e("div",{id:"lut-min"},"0.0"),e("div",{id:"lut-canvases"}),e("div",{id:"lut-max"},"1.0")),this._renderScene())}_createEdge(e,t){if([...this.edges].find(([s,i])=>i.node1Id===e&&i.node2Id===t||i.node1Id===t&&i.node2Id===e))console.log("edge already exists");else{const s={node1Id:e,node2Id:t},i=Y.getNextId(F.EDGE,this.edges);this._setEdge([i,s])}}_createAngle(e,t){if([...this.angles].find(([s,i])=>i.edge1Id===e&&i.edge2Id===t||i.edge1Id===t&&i.edge2Id===e))console.warn("cannot create angle: angle already exists");else{let s=this.edges.get(e),i=this.edges.get(t);if(s.node1Id===i.node1Id||s.node1Id==i.node2Id||s.node2Id==i.node1Id||s.node2Id===i.node2Id){const s={edge1Id:e,edge2Id:t},i=Y.getNextId(F.ANGLE,this.angles);this._setAngle([i,s])}else console.warn("cannot create angle: edges not connected")}}_getAppState(){return this.store.getState().app}_setGraph(e){e.nodes&&new Map(e.nodes).forEach((e,t)=>{this.appSetNode([t,e])}),e.edges&&new Map(e.edges).forEach((e,t)=>{this.appSetEdge([t,e])}),e.angles&&new Map(e.angles).forEach((e,t)=>{this.appSetAngle([t,e])}),this.changed.emit(this._getAppState())}_clearGraph(){this.appClearNodes(),this.appClearEdges(),this.appClearAngles(),this.changed.emit(this._getAppState())}_deleteNode(e){this.appDeleteNode(e),this.changed.emit(this._getAppState())}_setNode(e){this.appSetNode(e),this.changed.emit(this._getAppState())}_selectNode(e,t=!1){if(t&&e!==this.selected){let t={position:this.camera.position.clone(),target:this.camera.target.clone()},s={position:new THREE.Vector3(-1,-1,-1),target:new THREE.Vector3(-1,-1,-1)},i=U.getCameraStateFromNode(this.nodes.get(e),this._boundingSphereRadius);if(i){const n=i.position.distanceTo(this.camera.position);let a;if(a=this.camera.target?i.target.distanceTo(this.camera.target):0,n>0||a>0){s.position.copy(n>0?i.position:this.camera.position),s.target.copy(a>0?i.target:this.camera.target);const r=ue.getSlerpPath(t,s,n>0,a>0);this._scene.emit(se.ANIMATION_STARTED,{slerpPath:r},!1),this.appSetCamera({animating:!0}),this.appSelectNode(e),this.changed.emit(this._getAppState())}}}else this.appSelectNode(e),this.changed.emit(this._getAppState())}_setEdge(e){this.appSetEdge(e),this.changed.emit(this._getAppState())}_deleteEdge(e){this.appDeleteEdge(e),this.changed.emit(this._getAppState())}_selectEdge(e){this.appSelectEdge(e),this.changed.emit(this._getAppState())}_setAngle(e){this.appSetAngle(e),this.changed.emit(this._getAppState())}_selectAngle(e){this.appSelectAngle(e),this.changed.emit(this._getAppState())}_deleteAngle(e){this.appDeleteAngle(e),this.changed.emit(this._getAppState())}_setGraphEnabled(e){this.appSetGraphEnabled(e),this.changed.emit(this._getAppState())}_setBoundingBoxVisible(e){this.appSetBoundingBoxVisible(e),this.changed.emit(this._getAppState())}_setSlicesIndex(e){this.appSetSlicesIndex(e),this.changed.emit(this._getAppState())}_setOrientation(e){this.appSetOrientation(e),this.changed.emit(this._getAppState())}_setSlicesWindowCenter(e){this.appSetSlicesWindowCenter(e),this.changed.emit(this._getAppState())}_setSlicesWindowWidth(e){this.appSetSlicesWindowWidth(e),this.changed.emit(this._getAppState())}_setVolumeSteps(e){this.appSetVolumeSteps(e),this.changed.emit(this._getAppState())}_setVolumeWindowCenter(e){this.appSetVolumeWindowCenter(e),this.changed.emit(this._getAppState())}_setVolumeWindowWidth(e){this.appSetVolumeWindowWidth(e),this.changed.emit(this._getAppState())}_setDisplayMode(e){this.appSetDisplayMode(e),this.changed.emit(this._getAppState())}_setSrc(e){this.appSetSrc(e),this.changed.emit(this._getAppState())}_srcLoaded(e){const s=this._targetEntity.object3DMap.mesh;let i;switch(this.displayMode){case t.MESH:i=s;break;case t.SLICES:i=e.detail._bBox._mesh;break;case t.VOLUME:i=e.detail._mesh}let n=U.getCameraStateFromMesh(i);this._boundingSphereRadius=i.geometry.boundingSphere.radius,n&&this.appSetCamera(n),this.appSetSrcLoaded(!0),this.changed.emit(this._getAppState()),this.loaded.emit(e.detail)}_keyDownHandler(e){this._isShiftDown=e.shiftKey,e.keyCode===i.Delete&&this.selected&&(this.nodes.has(this.selected)?this._deleteNode(this.selected):this.edges.has(this.selected)?this._deleteEdge(this.selected):this.angles.has(this.selected)&&this._deleteAngle(this.selected))}_keyUpHandler(e){this._isShiftDown=!1}_controlsUpdatedHandler(e){this.appSetCamera(e.detail.cameraSerial)}_controlsEnabledHandler(e){this.appSetControlsEnabled(!0),ue.enableCamera(this._camera,!0)}_controlsDisabledHandler(e){this.appSetControlsEnabled(!1),ue.enableCamera(this._camera,!1)}_intersectionGraphClearedHandler(e){this._graphIntersection=null}_intersectingGraphHandler(e){this._graphIntersection=e.detail.id}_spawnNodeEventHandler(e){if(this.graphEnabled&&this._validTarget&&null===this._graphIntersection){let t=e.detail.detail.intersection;const s=Y.getNextId(F.NODE,this.nodes),i={target:ue.vector3ToString(this._targetEntity.object3D.position),position:ue.vector3ToString(t.point),scale:this._boundingSphereRadius/B.nodeSizeRatio,text:s},n=this.selected;this._setNode([s,i]),this._isShiftDown&&this.nodes.has(n)&&(this._createEdge(n,s),this._selectNode(s))}}_validTargetEventHandler(e){this._validTarget=e.detail.valid}_animationFinished(e){this.appSetCamera({animating:!1})}_graphSelectedHandler(e){if(!this.graphEnabled)return;const t=e.detail.id;switch(e.detail.type){case F.NODE:null!==this._graphIntersection&&this.nodes.has(this._graphIntersection)&&null!==this.selected&&this.nodes.has(this.selected)&&this.selected!==this._graphIntersection&&this._isShiftDown&&this._createEdge(this.selected,this._graphIntersection),this._selectNode(t);break;case F.EDGE:null!==this._graphIntersection&&this.edges.has(this._graphIntersection)&&null!==this.selected&&this.edges.has(this.selected)&&this.selected!==this._graphIntersection&&this._isShiftDown&&this._createAngle(this.selected,this._graphIntersection),this._selectEdge(t);break;case F.ANGLE:this._selectAngle(t)}}_nodeMovedEventHandler(e){const t=e.detail.id,s=this._camera.components.raycaster;let i=s.getIntersection(this._targetEntity);i||(i=s.getIntersection(this._backboard)),i&&(this._setNode([t,{position:ue.vector3ToString(i.point)}]),this._scene.emit(t+B.movedEventString,{},!0))}_addEventListeners(){document.addEventListener("keydown",this._keyDownHandler,!1),document.addEventListener("keyup",this._keyUpHandler,!1),this._scene.addEventListener(se.ANIMATION_FINISHED,this._animationFinished,!1),this._scene.addEventListener(se.UPDATED,this._controlsUpdatedHandler,!1),this._scene.addEventListener(J.POINTER_UP,this._controlsEnabledHandler,!1),this._scene.addEventListener(J.POINTER_DOWN,this._controlsDisabledHandler,!1),this._scene.addEventListener(J.DRAGGING,this._nodeMovedEventHandler,!1),this._scene.addEventListener(ee.ADD_NODE,this._spawnNodeEventHandler,!1),this._scene.addEventListener(J.SELECTED,this._graphSelectedHandler,!1),this._scene.addEventListener(ee.VALID_TARGET,this._validTargetEventHandler,!1),this._scene.addEventListener(z.LOADED,this._srcLoaded,!1),this._scene.addEventListener(Q.LOADED,this._srcLoaded,!1),this._scene.addEventListener(J.POINTER_OVER,this._intersectingGraphHandler,!1),this._scene.addEventListener(J.POINTER_OUT,this._intersectionGraphClearedHandler,!1)}componentDidLoad(){}componentDidUpdate(){if(this._scene&&this._addEventListeners(),this.debug)try{const e=this._camera.object3DMap.text.material;e&&(e.transparent=!0)}catch(e){}}static get is(){return"uv-aleph"}static get properties(){return{angles:{state:!0},boundingBoxVisible:{state:!0},camera:{state:!0},clearGraph:{method:!0},controlsEnabled:{state:!0},debug:{type:Boolean,attr:"debug"},deleteAngle:{method:!0},deleteEdge:{method:!0},deleteNode:{method:!0},displayMode:{state:!0},dracoDecoderPath:{type:String,attr:"draco-decoder-path"},edges:{state:!0},graphEnabled:{state:!0},height:{type:String,attr:"height"},load:{method:!0},nodes:{state:!0},nodesVisible:{state:!0},optionsEnabled:{state:!0},optionsVisible:{state:!0},orientation:{state:!0},resize:{method:!0},selected:{state:!0},selectNode:{method:!0},setBoundingBoxVisible:{method:!0},setDisplayMode:{method:!0},setEdge:{method:!0},setGraph:{method:!0},setGraphEnabled:{method:!0},setNode:{method:!0},setOrientation:{method:!0},setSlicesIndex:{method:!0},setSlicesWindowCenter:{method:!0},setSlicesWindowWidth:{method:!0},setVolumeSteps:{method:!0},setVolumeWindowCenter:{method:!0},setVolumeWindowWidth:{method:!0},slicesIndex:{state:!0},slicesWindowCenter:{state:!0},slicesWindowWidth:{state:!0},spinnerColor:{type:String,attr:"spinner-color"},src:{state:!0},srcLoaded:{state:!0},store:{context:"store"},volumeSteps:{state:!0},volumeWindowCenter:{state:!0},volumeWindowWidth:{state:!0},width:{type:String,attr:"width"}}}static get events(){return[{name:"changed",method:"changed",bubbles:!0,cancelable:!0,composed:!0},{name:"loaded",method:"loaded",bubbles:!0,cancelable:!0,composed:!0}]}static get style(){return"#al-container{position:relative;font-family:sans-serif}#al-container a-scene{background-color:var(--app-background-color);display:block;width:100%;height:100%}#al-container #lut-container{display:none}#al-container .progress.container{position:absolute;top:auto!important;bottom:0!important}#al-container .progress.container .load.progress,#al-container .progress.container .parse.progress{border:none!important;height:4px!important;background-color:#fff!important}"}}export{Se as UvAleph};